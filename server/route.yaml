# General
indexAPI:
  index:
    name         : API Index
    method       : get
    url          : /api
    response     : json
    requireSignIn: true
    desc: |
      All API list.

  clientConfig:
    name     : Client config
    method   : get
    url      : /api/v1/client-config/do/get
    response : json
    desc: |
      Client config.

  imageInfo:
    name    : Image information
    method  : get
    url     : /api/v1/image-info/do/get
    response: json
    desc: |
      Image Information

  captcha:
    name    : Gen captcha image
    method  : get
    url     : /api/v1/captcha/do/get
    response: image
    desc: |
      Get CAPTCHA image for signing in, changing password.
      The `captchaToken` should be a random string generated by the client,
      and been used in the API which needs captcha token.
    query:
      captchaCategory:
        $desc      : Captcha category
        $isRequired: true
        $type      : enum
        $in:
          - signIn
          - changePassword
      captchaToken:
        $desc      : Captcha token generated by client
        $isRequired: true
        $type      : string
        $maxLength : 128

  ping:
    showInDoc: true
    name     : Ping test
    method   : get
    url      : /api/v1/do/ping
    response : json
    desc: |
      Ping test.

  echo:
    showInDoc: true
    name     : Echo test
    method   : post
    url      : /api/v1/do/echo
    response : json
    desc: |
      Echo test.
    query:
      string:
        $desc     : string value
        $type     : string
        $allowNull: true
      integer:
        $desc: integer value
        $type: integer
      boolean:
        $desc: boolean value
        $type: boolean
    body:
      echo:
        $desc: Any value
        $type: any
        $skip: true

  proxy:
    showInDoc    : true
    name         : Proxy Request
    method       : post
    url          : /api/v1/do/proxy
    response     : json
    requireSignIn: true
    desc: |
      Do HTTP request via server.
    body:
      method:
        $desc      : HTTP method
        $isRequired: true
        $type      : enum
        $in:
          - get
          - post
          - put
          - delete
      url:
        $desc      : URL
        $isRequired: true
        $type      : string
        $example   : https://myip.ipip.net/
      headers:
        $desc: Headers
        $type: json
        $skip: true
      body:
        $desc: Body
        $type: json
        $skip: true
      withHeaders:
        $desc   : Get headers from response
        $type   : boolean
        $example: false
      timeout:
        $desc   : Timeout (seconds)
        $type   : integer
        $example: 3

  testThrowError:
    name     : Test Throw Error
    method   : get
    url      : /api/v1/do/test-throw-error
    response : json
    desc: |
      Test Throw Error.

  testThrowErrorInAsync:
    name     : Test Throw Error in Async
    method   : get
    url      : /api/v1/do/test-throw-error-in-async
    response : json
    desc: |
      Test Throw Error in Async.

  testSlowAPI:
    name     : Test Slow API
    method   : get
    url      : /api/v1/do/test-slow-api
    response : json
    desc: |
      Test Slow API.
    query:
      simulateReqCost:
        $desc    : Simulate request cost (ms)
        $type    : integer
        $minValue: 1

# Authentication
authAPI:
  signIn:
    name    : User sign in
    method  : post
    url     : /api/v1/auth/do/sign-in
    response: json
    desc: |
      This API will return a token called "xAuthToken" for specify current user.
      Client should store this token and add it to HTTP header when calling API.
    body:
      captchaToken:
        $desc      : Captcha token
        $isRequired: true
        $type      : string
      captcha:
        $desc      : Captcha
        $isRequired: true
        $type      : string
        $isLength  : 4
        $example   : '1234'
      signIn:
        username:
          $desc      : Username
          $isRequired: true
          $type      : string
          $maxLength : 30
          $example   : admin
        password:
          $desc      : Password
          $isRequired: true
          $type      : string
          $maxLength : 100
          $example   : 'Abc123'

  signOut:
    name    : User sign out
    method  : get
    url     : /api/v1/auth/do/sign-out
    response: json
    desc: |
      This API will reject the caller's xAuthToken.
      Client should delete the token and let user sign in again.

  changePassword:
    name         : Change password
    method       : post
    url          : /api/v1/auth/do/change-password
    response     : json
    requireSignIn: true
    authType     : builtin.byXAuthToken
    body:
      captchaToken:
        $desc      : Captcha token
        $isRequired: true
        $type      : string
      captcha:
        $desc      : Captcha
        $isRequired: true
        $type      : string
        $isLength  : 4
        $example   : '1234'
      changePassword:
        oldPassword:
          $desc      : Old password
          $isRequired: true
          $type      : string
          $maxLength : 100
          $example   : 'Abc123'
        newPassword:
          $desc      : New Password
          $isRequired: true
          $type      : string
          $maxLength : 100
          $example   : '123Abc'

  profile:
    name         : User profile
    method       : get
    url          : /api/v1/auth/profile/do/get
    response     : json
    requireSignIn: true

  modifyProfile:
    name         : Modify user profile
    method       : post
    url          : /api/v1/auth/profile/do/modify
    response     : json
    requireSignIn: true
    authType     : builtin.byXAuthToken
    body:
      data:
        $isRequired: true
        name:
          $desc      : Name
          $type      : string
          $maxLength : 50
        mobile:
          $desc      : Mobile
          $allowNull : true
          $type      : string
          $maxLength : 20
          $example   : '18600000000'

# User
userAPI:
  list:
    name         : List user
    method       : get
    url          : /api/v1/users/do/list
    response     : json
    requireSignIn: true
    authType     : builtin.byXAuthToken
    privilege    : user_r
    export       : true
    paging       : true
    fieldPicking : true
    fieldKicking : true
    orderFields:
      seq     : u.seq
      username: u.username
      name    : u.name
    fuzzySearch:
      - u.id
      - u.username
      - u.name
      - u.mobile
    query:
      id:
        $desc      : Filter by ID
        $type      : commaArray
        $searchType: in
        $searchKey : u.id
      username:
        $desc      : Search by username
        $type      : string
        $searchType: like
        $searchKey : u.username
      name:
        $desc      : Search by name
        $type      : string
        $searchType: like
        $searchKey : u.name
      mobile:
        $desc      : Search by mobile number
        $type      : int
        $searchType: like
        $searchKey : u.mobile
      isDisabled:
        $desc      : Filter by DISABLED flag
        $type      : boolean
        $searchType: boolean
        $searchKey : u.isDisabled

  get:
    name         : Get user
    method       : get
    url          : /api/v1/users/:id/do/get
    response     : json
    requireSignIn: true
    authType     : builtin.byXAuthToken
    privilege    : user_r
    fieldPicking : true
    fieldKicking : true
    params:
      id:
        $desc: User ID
        $type: string

  add:
    name         : Add User
    method       : post
    url          : /api/v1/users/do/add
    response     : json
    requireSignIn: true
    authType     : builtin.byXAuthToken
    privilege    : user_w
    body:
      data:
        $isRequired: true
        username:
          $desc      : Username
          $isRequired: true
          $type      : string
          $maxLength : 30
          $example   : tom
        password:
          $desc      : Password
          $isRequired: true
          $type      : string
          $maxLength : 100
          $example   : 'Abc123'
        name:
          $desc      : Name
          $isRequired: true
          $type      : string
          $maxLength : 50
          $example   : Tom White
        mobile:
          $desc     : Mobile number
          $type     : string
          $allowNull: true
          $maxLength: 20
          $example  : '18600000000'
        roles:
          $desc      : Role
          $isRequired: true
          $type      : array
          $allowNull : true
          $:
            $type: enum
            $in:
              - admin
              - user
              - readonlyUser
              - customUser
        customPrivileges:
          $desc     : Custom Privileges
          $type     : string
          $allowNull: true
        isDisabled:
          $desc: DISABLED flag
          $type: boolean

  modify:
    name         : Modify user
    method       : post
    url          : /api/v1/users/:id/do/modify
    response     : json
    requireSignIn: true
    authType     : builtin.byXAuthToken
    privilege    : user_w
    params:
      id:
        $desc: User ID
        $type: string
    body:
      data:
        $isRequired: true
        username:
          $desc      : Username
          $type      : string
          $maxLength : 30
          $example   : tom
        password:
          $desc      : Password
          $type      : string
          $maxLength : 100
          $example   : 'Abc123'
        name:
          $desc      : Name
          $type      : string
          $maxLength : 50
          $example   : Tom White
        mobile:
          $desc     : Mobile number
          $type     : string
          $allowNull: true
          $maxLength: 20
          $example  : '18600000000'
        roles:
          $desc     : Roles
          $type     : array
          $allowNull: true
          $:
            $type: enum
            $in:
              - admin
              - user
              - readonlyUser
              - customUser
        customPrivileges:
          $desc     : Custom Privileges
          $type     : string
          $allowNull: true
        isDisabled:
          $desc: DISABLED flag
          $type: boolean

  delete:
    name         : Delete user
    method       : get
    url          : /api/v1/users/:id/do/delete
    response     : json
    requireSignIn: true
    authType     : builtin.byXAuthToken
    privilege    : user_w
    params:
      id:
        $desc: User ID
        $type: string

# Access Key
accessKeyAPI:
  list:
    name         : List access key
    method       : get
    url          : /api/v1/access-keys/do/list
    response     : json
    requireSignIn: true
    authType     : builtin.byXAuthToken
    privilege    : accessKey_r
    export       : true
    paging       : true
    fieldPicking : true
    fieldKicking : true
    orderFields:
      seq : ak.seq
    fuzzySearch:
      - ak.id
      - ak.name
    query:
      id:
        $desc      : Filter by ID
        $type      : commaArray
        $searchType: in
        $searchKey : ak.id
      name:
        $desc      : Search by name
        $type      : string
        $searchType: like
        $searchKey : ak.name

  get:
    name         : Get access key
    method       : get
    url          : /api/v1/access-keys/:id/do/get
    response     : json
    requireSignIn: true
    authType     : builtin.byXAuthToken
    privilege    : accessKey_r
    fieldPicking : true
    fieldKicking : true
    params:
      id:
        $desc: Access key ID
        $type: string

  add:
    name         : Add access key
    method       : post
    url          : /api/v1/access-keys/do/add
    response     : json
    requireSignIn: true
    authType     : builtin.byXAuthToken
    privilege    : accessKey_w
    body:
      data:
        $isRequired: true
        name:
          $desc      : Name
          $isRequired: true
          $allowNull : true
          $type      : string
        webhookURL:
          $desc     : Webhook
          $allowNull: true
          $type     : string
        webhookEvents:
          $desc     : Webhook events
          $allowNull: true
          $type     : string
        allowWebhookEcho:
          $desc     : Allow webhook echo
          $allowNull: true
          $type     : boolean

  modify:
    name         : Modify access key
    method       : post
    url          : /api/v1/access-keys/:id/do/modify
    response     : json
    requireSignIn: true
    authType     : builtin.byXAuthToken
    privilege    : accessKey_w
    params:
      id:
        $desc: Access key ID
        $type: string
    body:
      data:
        $isRequired: true
        webhookURL:
          $desc     : Webhook
          $allowNull: true
          $type     : string
        webhookEvents:
          $desc     : Webhook events
          $allowNull: true
          $type     : string
        allowWebhookEcho:
          $desc: Allow webhook echo
          $type: boolean

  delete:
    name         : Delete access key
    method       : get
    url          : /api/v1/access-keys/:id/do/delete
    response     : json
    requireSignIn: true
    authType     : builtin.byXAuthToken
    privilege    : accessKey_w
    params:
      id:
        $desc: Access key ID
        $type: string

  testWebhook:
    name         : Test webhook
    method       : get
    url          : /api/v1/access-keys/:id/do/test-webhook
    response     : json
    requireSignIn: true
    authType     : builtin.byXAuthToken
    privilege    : accessKey_r
    params:
      id:
        $desc: Access key ID
        $type: string

# Monitor
monitorAPI:
  getSysStats:
    showInDoc    : true
    name         : Get system stats
    method       : get
    url          : /api/v1/monitor/sys-stats/do/get
    response     : json
    requireSignIn: true
    privilege    : general_r

  listAbnormalRequests:
    showInDoc    : true
    name         : List abnormal requests
    method       : get
    url          : /api/v1/monitor/abnormal-requests/:type/do/list
    response     : json
    requireSignIn: true
    privilege    : general_r
    paging       : true
    params:
      type:
        $desc: Abnormal request type
        $type: enum
        $in:
          - 'reqCost1000'
          - 'reqCost5000'
          - 'statusCode4xx'
          - 'statusCode5xx'

  clearAbnormalRequests:
    showInDoc    : true
    name         : Clear abnormal requests
    method       : get
    url          : /api/v1/monitor/abnormal-requests/do/clear
    response     : json
    requireSignIn: true
    privilege    : general_w

  getServerEnvironment:
    name         : Get server environment
    method       : get
    url          : /api/v1/monitor/server-environment/do/get
    response     : json
    requireSignIn: true
    privilege    : general_r

  clearSysStats:
    name         : Clear system stats
    method       : get
    url          : /api/v1/monitor/sys-stats/do/clear
    response     : json
    requireSignIn: true
    privilege    : general_w

  listQueuedTasks:
    name         : List tasks in queue
    method       : get
    url          : /api/v1/monitor/tasks/do/list-queued
    response     : json
    requireSignIn: true
    privilege    : general_r
    query:
      task:
        $desc: Match by task name
        $type: string

  listScheduledTasks:
    name         : List scheduled tasks
    method       : get
    url          : /api/v1/monitor/tasks/do/list-scheduled
    response     : json
    requireSignIn: true
    privilege    : general_r
    query:
      task:
        $desc: Match by task name
        $type: string

  listRecentTasks:
    name         : List recent tasks
    method       : get
    url          : /api/v1/monitor/tasks/do/list-recent
    response     : json
    requireSignIn: true
    privilege    : general_r
    query:
      task:
        $desc: Match by task name
        $type: string
      status:
        $desc: Filter by task status
        $type: enum
        $in:
          - SUCCESS
          - FAILURE
          - PENDING

  pingNodes:
    name         : Get worker node ping
    method       : get
    url          : /api/v1/monitor/nodes/do/ping
    response     : json
    requireSignIn: true
    privilege    : general_r

  getNodesStats:
    name         : Get worker node stats
    method       : get
    url          : /api/v1/monitor/nodes/do/get-stats
    response     : json
    requireSignIn: true
    privilege    : general_r

  getNodesActiveQueues:
    name         : Get worker node active queues
    method       : get
    url          : /api/v1/monitor/nodes/do/get-active-queues
    response     : json
    requireSignIn: true
    privilege    : general_r

  getNodesReport:
    name         : Get worker node report
    method       : get
    url          : /api/v1/monitor/nodes/do/get-report
    response     : json
    requireSignIn: true
    privilege    : general_r

  clearWorkerQueues:
    name         : Clear worker queues
    method       : post
    url          : /api/v1/monitor/worker-queues/do/clear
    response     : json
    requireSignIn: true
    privilege    : general_w
    body:
      workerQueues:
        $desc      : Worker Queue names
        $isRequired: true
        $:
          $desc      : Worker Queue name
          $isRequired: true
          $type      : string
          $minLength : 1

# System Config
systemConfigAPI:
  list:
    name         : List System Config
    method       : get
    url          : /api/v1/system-configs/do/list
    response     : json
    requireSignIn: true
    privilege    : systemConfig_r
    export       : true
    fuzzySearch:
      - sc.id
    query:
      id:
        $desc      : Filter by ID
        $type      : commaArray
        $searchType: in
        $searchKey : sc.id

  get:
    name         : Get System Config
    method       : get
    url          : /api/v1/system-configs/:id/do/get
    response     : json
    requireSignIn: true
    privilege    : systemConfig_r
    params:
      id:
        $desc: System Config ID
        $type: string

  set:
    name         : Set System Config
    method       : post
    url          : /api/v1/system-configs/:id/do/set
    response     : json
    requireSignIn: true
    authType     : builtin.byXAuthToken
    privilege    : systemConfig_w
    params:
      id:
        $desc: System Config ID
        $type: string
    body:
      data:
        $isRequired: true
        value:
          $desc: System Config Value
          $type: any

  delete:
    name         : Delete System Config
    method       : get
    url          : /api/v1/system-configs/:id/do/delete
    response     : json
    requireSignIn: true
    authType     : builtin.byXAuthToken
    privilege    : systemConfig_w
    params:
      id:
        $desc: System Config ID
        $type: string

# Debug
debugAPI:
  putTask:
    showInDoc    : true
    name         : DEBUG - Put async task
    descType     : markdown
    desc         : "*CAUTION: This API is just for debug, please DO NOT use in a production environment.*"
    method       : post
    url          : /api/v1/debug/tasks/do/put
    response     : json
    requireSignIn: true
    authType     : builtin.byXAuthToken
    privilege    : general_w
    body:
      waitResult:
        $desc   : Wait task result before response
        $type   : boolean
        $example: true
      times:
        $desc    : Send times
        $type    : int
        $minValue: 1
        $example : 1
      task:
        name:
          $desc      : Task name
          $isRequired: true
          $type      : string
          $example   : Example.Echo.Success
        args:
          $desc: List arguments (*args)
          $:
            $type: any
          $example: ['arg1', 'arg2', 'arg3']
        kwargs:
          $desc: Dict arguments (**kwargs)
          $type: json
          $example: {'kwarg1': 'val1', 'kwarg2': 'val2'}
        options:
          $desc: Task options
          queue:
            $desc   : Queue
            $type   : string
            $example: celery
          eta:
            $desc     : ETA (ISO8601)
            $type     : string
            $isISO8601: true
            $example  : '2020-01-01T00:00:00Z'
          expires:
            $desc     : Expires (ISO8601)
            $type     : string
            $isISO8601: true
            $example  : '2020-01-01T00:00:00Z'
          retries:
            $desc    : Retry times
            $type    : int
            $minValue: 0
          timeLimit:
            $desc    : Time limit (in seconds)
            $type    : int
            $minValue: 1
          softTimeLimit:
            $desc    : Time soft limit (in seconds)
            $type    : int
            $minValue: 1
          origin:
            $desc   : origin
            $type   : string
            $example: Host-1
          priority:
            $desc    : Priority
            $type    : int
            $minValue: 0
            $maxValue: 255
            $example : 0
          extra:
            $desc   : Extra information
            $type   : any
            $example: {"extraKey": "extraValue"}

# 主要接口
mainAPI:
  overview:
    showInDoc    : true
    name         : 获取总览
    method       : get
    url          : /api/v1/func/overview
    response     : json
    requireSignIn: true
    privilege    : general_r
    query:
      sections:
        $desc: 总览小节
        $type: commaArray

  describeFunc:
    showInDoc    : true
    name         : 获取函数描述
    method       : get
    url          : /api/v1/func/:funcId
    response     : json
    requireSignIn: $NOT_CONFIG._IS_STREAKING
    privilege    : general_r
    params:
      funcId:
        $desc: 函数ID（如：lib__demo.hello_world）
        $type: string

  callFunc:
    showInDoc    : true
    name         : 调用函数
    descType: markdown
    desc: |
      调用函数

      函数参数`kwargs`以字典`dict`方式传递（即`func(**kwargs)`）

      - 当不指定，或指定同步模式`options.execMode="sync"`时，接口会等待函数返回，并直接将结果返回给调用者，*但一定时间后API接口依然会超时*。
      - 当指定同步模式`options.execMode="async"`时，接口会立即返回，函数返回值需要另外调用接口查询。

      当`returnType`为`"ALL"`时，返回值结构如下：

      |           字段           |   类型   |                       说明                      |
      |--------------------------|----------|-------------------------------------------------|
      | `error`                  | `number` | 错误码。整数部分与HTTP状态码相同（200表示正常） |
      | `message`                | `string` | 错误信息（正常时为固定空字符串）                |
      | `data`                   | `json`   | 函数执行结果                                    |
      | `data.result`            | `json`   | 本次函数执行结果（仅在同步模式时返回）          |
      | `data.result.raw`        | `ANY`    | 本次函数运行结果原始值                          |
      | `data.result.repr`       | `string` | 本次函数运行结果经`repr()`处理后的值            |
      | `data.result.jsonDumps`  | `string` | 本次函数运行结果经`json.dumps()`处理后的值      |
      | `data.taskId`            | `string` | 本次函数执行任务ID                              |
      | `traceId`                | `string` | 本次请求的请求ID，可用于查阅日志                |
      | `reqCost`                | `number` | 本次请求服务器端耗时（毫秒）                    |

      示例如下：

      ```json
      {
        "error"  : 200,
        "message": "",
        "data": {
          "result": {
            "raw"      : "Hello, Tom",
            "repr"     : "'Hello, Tom'",
            "jsonDumps": "\"Hello, Tom\""
          },
          "taskId": "task-00000000-0000-0000-0000-000000000000",
        },
        "traceId": "TRACE-00000000-0000-0000-0000-000000000000",
        "reqCost": 35
      }
      ```

      当`returnType`*不为*`"ALL"`，返回值中`result`字段为指定的返回格式。

      当`returnType`为`"raw"`时，返回值结构如下：

      |           字段           |   类型   |                       说明                      |
      |--------------------------|----------|-------------------------------------------------|
      | `error`                  | `number` | 错误码。整数部分与HTTP状态码相同（200表示正常） |
      | `message`                | `string` | 错误信息（正常时为固定空字符串）                |
      | `data`                   | `json`   | 函数执行结果                                    |
      | `data.result`            | `ANY`    | 本次函数运行结果原始值（`returnType`=`"raw"`）  |
      | `data.taskId`            | `string` | 本次函数执行任务ID                              |
      | `traceId`                | `string` | 本次请求的请求ID，可用于查阅日志                |
      | `reqCost`                | `number` | 本次请求服务器端耗时（毫秒）                    |

      示例如下：

      ```json
      {
        "error"  : 200,
        "message": "",
        "data": {
          "result": "Hello, Tom",
          "taskId": "task-00000000-0000-0000-0000-000000000000",
        },
        "traceId": "TRACE-00000000-0000-0000-0000-000000000000",
        "reqCost": 35
      }
      ```
    method       : post
    url          : /api/v1/func/:funcId
    response     : json
    requireSignIn: $NOT_CONFIG._IS_STREAKING
    privilege    : general_r
    params:
      funcId:
        $desc: 函数ID（如：lib__demo.hello_world）
        $type: string
    body:
      kwargs:
        $desc: 函数调用字典参数（**kwargs）
        $type: json
        $example: {'msg': 'Tom'}
      options:
        $desc: 选项
        apiTimeout:
          $desc    : API超时时间（秒，默认5秒）
          $type    : integer
          $minValue: 1
          $maxValue: 30
          $example : 5
        returnType:
          $desc: 返回类型（默认raw）
          $type: enum
          $in:
            - ALL
            - raw
            - repr
            - jsonDumps
        unfold:
          $desc: 拆包（仅限execMode=sync。默认false）
          $type: boolean
        execMode:
          $desc: 执行模式（sync=同步；async=异步。默认sync）
          $type: enum
          $in:
            - sync
            - async
        saveResult:
          $desc   : 是否保存结果供后续查询（默认false）
          $type   : boolean
          $example: false
        eta:
          $desc     : 预约执行（ISO8601格式，仅限execMode=async）
          $type     : string
          $isISO8601: true
          $example  : '2020-01-01T00:00:00Z'

  callAuthLinkByGet:
    showInDoc    : true
    name         : 调用授权链接（GET方式）
    method       : get
    url          : /api/v1/al/:id
    response     : json
    requireSignIn: false
    params:
      id:
        $desc: 授权链接ID
        $type: string
    query:
      kwargs:
        $desc   : 函数调用字典参数（**kwargs）
        $type   : jsonstring
        $example: {"msg": "Tom"}
      options:
        $desc   : 选项（详细参考POST方式描述）
        $type   : jsonstring
        $example: {"execMode": "async"}

  callAuthLinkByGetWithFormat:
    showInDoc    : true
    name         : 调用授权链接（GET方式，指定形式）
    descType: markdown
    desc: |
      在某些第三方系统无法使用标准调用格式时，可以指定不同格式方便调用：

      - 标准GET

      ```http
      GET /api/v1/al/auln-xxxxx
      ?kwargs={"arg1":"arg_value1","arg2":"arg_value2"}
      &options={"opt1":"opt_value1","opt2":"opt_value2"}
      ```

      - 扁平形式 `flattened`

      ```http
      GET /api/v1/al/auln-xxxxx/flattened
      ?kwargs_arg1=arg_value1
      &kwargs_arg2=arg_value2
      &options_opt1=opt_value1
      &options_opt2=opt_value2
      ```

      *注意：本形式所有参数值都以字符串传递，函数需要自行转换数据类型*

      - 简化形式 `simplified`

      ```http
      GET /api/v1/al/auln-xxxxx/simplified
      ?arg1=arg_value1
      &arg2=arg_value2
      ```

      *注意：本形式所有参数值都以字符串传递，函数需要自行转换数据类型*
      *注意2：本形式不支持标准格式中的`options`参数*

    method       : get
    url          : /api/v1/al/:id/:format
    response     : json
    requireSignIn: false
    params:
      id:
        $desc: 授权链接ID
        $type: string
      format:
        $desc: 调用形式
        $type: enum
        $in:
          - flattened
          - simplified

  callAuthLinkByPost:
    showInDoc    : true
    name         : 调用授权链接（POST方式）
    method       : post
    url          : /api/v1/al/:id
    response     : json
    requireSignIn: false
    privilege    : general_r
    params:
      id:
        $desc: 授权链接ID
        $type: string
    body:
      kwargs:
        $desc: 函数调用字典参数（**kwargs）
        $type: json
        $example: {'msg': 'Tom'}
      options:
        $desc: 选项
        returnType:
          $desc: 返回类型（默认raw）
          $type: enum
          $in:
            - ALL
            - raw
            - repr
            - jsonDumps
        unfold:
          $desc: 拆包（仅限execMode=sync。默认true）
          $type: boolean
        execMode:
          $desc: 执行模式（sync=同步；async=异步。默认sync）
          $type: enum
          $in:
            - sync
            - async

  callAuthLinkByPostWithFormat:
    showInDoc    : true
    name         : 调用授权链接（POST方式，指定形式）
    descType: markdown
    desc: |
      在某些第三方系统无法使用标准调用形式时，可以指定不同形式方便调用：

      - 标准POST

      ```http
      POST /api/v1/al/auln-xxxxx
      Content-Type: application/json

      {
        "kwargs": {
          "arg1": "arg_value1",
          "arg2": "arg_value2"
        },
        "options": {
          "opt1": "opt_value1",
          "opt2": "opt_value2"
        }
      }
      ```

      *注意：本形式不支持上传文件*

      - 扁平形式 `flattened`

      ```http
      POST /api/v1/al/auln-xxxxx/flattened
      Content-Type: x-www-form-urlencoded

      kwargs_arg1=arg_value1&kwargs_arg2=arg_value2&options_opt1=opt_value1&options_opt2=opt_value2
      ```

      *注意：本形式所有参数值都以字符串传递，函数需要自行转换数据类型*
      *注意2：当上传文件时，需要指定`Content-Type: multipart/form-data`*

      - 简化形式 `simplified`

      ```http
      POST /api/v1/al/auln-xxxxx/simplified
      Content-Type: x-www-form-urlencoded

      arg1=arg_value1&arg2=arg_value2
      ```

      *注意：本形式所有参数值都以字符串传递，函数需要自行转换数据类型*
      *注意2：本形式不支持标准形式中的`options`参数*
      *注意3：当上传文件时，需要指定`Content-Type: multipart/form-data`*

    method       : post
    url          : /api/v1/al/:id/:format
    response     : json
    requireSignIn: false
    params:
      id:
        $desc: 授权链接ID
        $type: string
      format:
        $desc: 调用形式
        $type: enum
        $in:
          - flattened
          - simplified
    files:
      $limitSize   : 10GB
      $allowedTypes: '*/*'

  callCrontabConfig:
    showInDoc    : true
    name         : 调用自动触发配置（手动执行）
    method       : get
    url          : /api/v1/cron/:id
    response     : json
    requireSignIn: $NOT_CONFIG._IS_STREAKING
    privilege    : general_r
    params:
      id:
        $desc: 批处理ID
        $type: string

  callBatchByGet:
    showInDoc    : true
    name         : 调用批处理（GET方式）
    method       : get
    url          : /api/v1/bat/:id
    response     : json
    requireSignIn: false
    privilege    : general_r
    params:
      id:
        $desc: 批处理ID
        $type: string
    query:
      kwargs:
        $desc   : 函数调用字典参数（**kwargs）
        $type   : jsonstring
        $example: {"msg": "Tom"}

  callBatchByGetWithFormat:
    showInDoc    : true
    name         : 调用批处理（GET方式，指定形式）
    descType: markdown
    desc: |
      在某些第三方系统无法使用标准调用形式时，可以指定不同形式方便调用：

      - 标准GET
      ```
      GET /api/v1/bat/bat-xxxxx
      &kwargs={"arg1":"arg_value1","arg2":"arg_value2"}
      ```

      - 扁平形式 `flattened`
      ```
      GET /api/v1/bat/bat-xxxxx/flattened
      ?kwargs_arg1=arg_value1
      &kwargs_arg2=arg_value2
      ```
      *注意：本形式所有参数值都以字符串传递，函数需要自行转换数据类型*

      - 简化形式 `simplified`
      ```
      GET /api/v1/bat/bat-xxxxx/simplified
      ?arg1=arg_value1
      &arg2=arg_value2
      ```
      *注意：本形式所有参数值都以字符串传递，函数需要自行转换数据类型*

    method       : get
    url          : /api/v1/bat/:id/:format
    response     : json
    requireSignIn: false
    privilege    : general_r
    params:
      id:
        $desc: 批处理ID
        $type: string
      format:
        $desc: 调用形式
        $type: enum
        $in:
          - flattened
          - simplified

  callBatchByPost:
    showInDoc    : true
    name         : 调用批处理（POST方式）
    method       : post
    url          : /api/v1/bat/:id
    response     : json
    requireSignIn: false
    privilege    : general_r
    params:
      id:
        $desc: 批处理ID
        $type: string
    body:
      kwargs:
        $desc: 函数调用字典参数（**kwargs）
        $type: json
        $example: {'msg': 'Tom'}

  callBatchByPostWithFormat:
    showInDoc    : true
    name         : 调用批处理（POST方式，指定形式）
    descType: markdown
    desc: |
      在某些第三方系统无法使用标准调用形式时，可以指定不同形式方便调用：

      - 标准POST

      ```http
      POST /api/v1/al/auln-xxxxx
      Content-Type: application/json

      {
        "kwargs": {
          "arg1": "arg_value1",
          "arg2": "arg_value2"
        },
        "options": {
          "opt1": "opt_value1",
          "opt2": "opt_value2"
        }
      }
      ```

      *注意：本形式不支持上传文件*

      - 扁平形式 `flattened`

      ```http
      POST /api/v1/al/auln-xxxxx/flattened
      Content-Type: x-www-form-urlencoded

      kwargs_arg1=arg_value1&kwargs_arg2=arg_value2&options_opt1=opt_value1&options_opt2=opt_value2
      ```

      *注意：本形式所有参数值都以字符串传递，函数需要自行转换数据类型*
      *注意2：当上传文件时，需要指定`Content-Type: multipart/form-data`*

      - 简化形式 `simplified`

      ```http
      POST /api/v1/al/auln-xxxxx/simplified
      Content-Type: x-www-form-urlencoded

      arg1=arg_value1&arg2=arg_value2
      ```

      *注意：本形式所有参数值都以字符串传递，函数需要自行转换数据类型*
      *注意2：本形式不支持标准形式中的`options`参数*
      *注意3：当上传文件时，需要指定`Content-Type: multipart/form-data`*

    method       : post
    url          : /api/v1/bat/:id/:format
    response     : json
    requireSignIn: false
    params:
      id:
        $desc: 批处理ID
        $type: string
      format:
        $desc: 调用形式
        $type: enum
        $in:
          - flattened
          - simplified
    files:
      $limitSize   : 10GB
      $allowedTypes: '*/*'

  callFuncDraft:
    showInDoc    : true
    name         : 调用函数（以草稿运行）
    descType: markdown
    desc: |
      以草稿调用函数

      调用方式与上述`调用函数`相同，*但只能以同步模式调用，不支持异步模式*

    method       : post
    url          : /api/v1/func-draft/:funcId
    response     : json
    requireSignIn: true
    privilege    : general_r
    params:
      funcId:
        $desc: 函数ID（如：lib__demo.hello_world）
        $type: string
    body:
      kwargs:
        $desc: 函数调用字典参数（**kwargs）
        $type: json
        $example: {'msg': 'Tom'}

  getFuncResult:
    showInDoc    : true
    name         : 获取函数结果
    method       : get
    url          : /api/v1/func-result
    response     : json
    requireSignIn: $NOT_CONFIG._IS_STREAKING
    privilege    : general_r
    query:
      taskId:
        $desc      : 任务ID（接口调用时返回）
        $isRequired: true
        $type      : string
      returnType:
        $desc: 返回类型（默认raw）
        $type: enum
        $in:
          - ALL
          - raw
          - repr
          - jsonDumps
      unfold:
        $desc: 拆包
        $type: boolean

  getFuncList:
    showInDoc    : true
    name         : 函数文档（JSON文档）
    method       : get
    url          : /api/v1/func-list
    response     : json
    requireSignIn: $NOT_CONFIG._IS_STREAKING
    privilege    : general_r
    fuzzySearch:
      - func.id
      - func.title
      - func.description
    query:
      id:
        $desc      : 根据函数ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.id
      name:
        $desc      : 根据函数名过滤
        $type      : string
        $searchType: like
        $searchKey : func.name
      title:
        $desc      : 根据函数标题搜索
        $type      : string
        $searchType: like
        $searchKey : func.title
      category:
        $desc      : 根据类型过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.category
      integration:
        $desc      : 根据集成过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.integration
      tags:
        $desc      : 根据函数标签过滤
        $type      : commaArray
        $searchType: jsonArrayHasAll
        $searchKey : func.tagsJSON
      scriptId:
        $desc      : 根据所属脚本ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : scpt.id
      scriptSetId:
        $desc      : 根据所属脚本集ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : sset.id

  getFuncTagList:
    showInDoc    : true
    name         : 函数标签列表
    method       : get
    url          : /api/v1/func-tag-list
    response     : json
    requireSignIn: $NOT_CONFIG._IS_STREAKING
    privilege    : general_r
    query:
      scriptSetId:
        $desc      : 根据脚本集ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.scriptSetId
      scriptId:
        $desc      : 根据脚本ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.scriptId
      name:
        $desc: 根据标签名搜索（LIKE方式）
        $type: string
      tagPattern:
        $desc: 根据标签名模式搜索（通配方式，如`key|*`）
        $type: string

  getAuthLinkFuncList:
    showInDoc    : true
    name         : 授权链接函数文档（JSON文档）
    method       : get
    url          : /api/v1/auth-link-func-list
    response     : json
    requireSignIn: false
    fuzzySearch:
      - func.id
      - func.title
      - func.description
    query:
      funcId:
        $desc      : 根据函数ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.id
      funcName:
        $desc      : 根据函数名过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.name
      funcCategory:
        $desc      : 根据类型过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.category
      funcTags:
        $desc      : 根据函数标签过滤
        $type      : commaArray
        $searchType: jsonArrayHasAll
        $searchKey : func.tagsJSON
      scriptId:
        $desc      : 根据所属脚本ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : scpt.id
      scriptSetId:
        $desc      : 根据所属脚本集ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : sset.id

  getSystemConfig:
    name    : 获取系统配置
    method  : get
    url     : /api/v1/func-system-config
    response: json

  getUpgradeInfo:
    name         : 获取升级信息
    method       : get
    url          : /api/v1/upgrade-info
    response     : json
    requireSignIn: false
    query:
      seq:
        $desc: 更新序号（数字或"latest"）
        $type: int

  integratedSignIn:
    name    : 集成用户登录
    method  : post
    url     : /api/v1/func/integration/sign-in
    response: json
    body:
      captchaToken:
        $desc      : 验证码令牌
        $isRequired: true
        $type      : string
      captcha:
        $desc      : 验证码
        $isRequired: true
        $type      : string
        $isLength  : 4
        $example   : '1234'
      signIn:
        funcId:
          $desc      : 函数ID
          $isRequired: true
          $type      : string
          $maxLength : 256
          $example   : demo_test.sign_in
        username:
          $desc      : 用户名
          $isRequired: true
          $type      : string
          $maxLength : 30
          $example   : admin
        password:
          $desc      : 密码
          $isRequired: true
          $type      : string
          $maxLength : 100
          $example   : 'Abc123'

  clearLogCacheTables:
    name         : 清空日志/缓存表
    method       : post
    url          : /api/v1/log-cache-tables/do/clear
    response     : json
    requireSignIn: true
    privilege    : general_w

  listInstalledPythonPackages:
    name         : 列出已安装的Python包
    method       : get
    url          : /api/v1/python-packages/installed
    response     : json
    requireSignIn: true
    privilege    : general_r

  getPythonPackageInstallStatus:
    name         : 获取Python包安装状态
    method       : get
    url          : /api/v1/python-packages/install-status
    response     : json
    requireSignIn: true
    privilege    : general_r

  installPythonPackage:
    name         : 安装Python包
    method       : post
    url          : /api/v1/python-packages/install
    response     : json
    requireSignIn: true
    privilege    : general_w
    body:
      mirror:
        $desc: 镜像源（如：https://pypi.tuna.tsinghua.edu.cn/simple/）
        $type: string
      pkg:
        $desc      : Python包（如：requests 或 requests==1.0.0）
        $isRequired: true
        $type      : string
        $minLength : 1

  listResources:
    name         : 列出资源文件
    method       : get
    url          : /api/v1/resources/dir
    response     : json
    requireSignIn: true
    privilege    : general_r
    query:
      folder:
        $desc: 文件夹
        $type: string
      type:
        $desc: 根据类型过滤
        $type: commaArray
        $commaArrayIn:
          - folder
          - file

  getResources:
    name         : 获取资源文件信息
    method       : get
    url          : /api/v1/resources/get
    response     : blob
    requireSignIn: true
    privilege    : general_r
    query:
      filePath:
        $desc    : 文件路径
        $required: true
        $type    : string

  downloadResources:
    name         : 下载资源文件
    method       : get
    url          : /api/v1/resources
    response     : blob
    requireSignIn: true
    privilege    : general_r
    query:
      filePath:
        $desc    : 文件路径
        $required: true
        $type    : string
      preview:
        $desc    : 预览模式
        $required: false
        $type    : boolean

  uploadResource:
    name         : 上传资源文件
    method       : post
    url          : /api/v1/resources
    response     : json
    requireSignIn: true
    privilege    : general_w
    files:
      $limitSize   : 10GB
      $allowedTypes: '*/*'
    body:
      folder:
        $desc: 文件夹
        $type: string
      rename:
        $desc: 文件重命名
        $type: string

  operateResource:
    name         : 操作资源文件
    method       : post
    url          : /api/v1/resources/operate
    response     : json
    requireSignIn: true
    privilege    : general_w
    body:
      targetPath:
        $desc    : 操作目标路径（文件/目录）
        $required: true
        $type    : string
      operation:
        $desc    : 执行操作
        $required: true
        $type    : enum
        $in:
          - mkdir
          - zip
          - unzip
          - cp
          - mv
          - rm
      operationArgument:
        $desc     : 执行操作参数
        $allowNull: true
        $required : false
        $type     : string

  fileService:
    name         : 文件服务
    method       : get
    url          : /api/v1/fs/:id/*
    response     : any
    requireSignIn: false
    params:
      id:
        $desc: 文件服务ID
        $type: string

  getScriptPackageIndex:
    name         : 获取脚本包索引
    method       : get
    url          : /api/v1/script-packages/index
    response     : json
    requireSignIn: true
    privilege    : general_r
    query:
      indexURL:
        $desc    : 脚本包索引URL地址
        $required: false
        $type    : string

  pullSystemLogs:
    name         : 拉取系统日志
    method       : get
    url          : /api/v1/system-logs
    response     : json
    requireSignIn: true
    privilege    : general_r
    query:
      position:
        $desc    : 日志文件读取位置
        $required: false
        $type    : integer

  metrics:
    name         : 获取指标数据（OpenMetric）
    method       : get
    url          : /api/v1/metrics
    response     : text
    requireSignIn: false
    privilege    : general_r

# 脚本集
scriptSetAPI:
  list:
    showInDoc    : true
    name         : 列出脚本集
    method       : get
    url          : /api/v1/script-sets/do/list
    response     : json
    requireSignIn: $NOT_CONFIG._IS_STREAKING
    privilege    : general_r
    export       : true
    paging       : true
    fieldPicking : true
    fieldKicking : true
    orderFields:
      seq: sset.seq
      id : sset.id
    fuzzySearch:
      - sset.id
      - sset.title
      - sset.description
      - sset.requirements
    query:
      id:
        $desc      : 根据ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : sset.id

  add:
    showInDoc    : true
    name         : 添加脚本集
    method       : post
    url          : /api/v1/script-sets/do/add
    response     : json
    requireSignIn: true
    privilege    : general_w
    body:
      data:
        $isRequired: true
        id:
          $desc          : ID
          $isRequired    : true
          $type          : string
          $minLength     : 1
          $maxLength     : 32
          $matchRegExp   : ^[a-zA-Z_][a-zA-Z0-9_]*$
          $notMatchRegExp: __
        title:
          $desc      : 标题
          $allowNull : true
          $type      : string
        description:
          $desc      : 描述
          $allowNull : true
          $type      : string
        requirements:
          $desc      : 依赖包
          $allowNull : true
          $type      : string
        isPinned:
          $desc      : 是否已置顶
          $allowNull : true
          $type      : boolean

  modify:
    showInDoc    : true
    name         : 修改脚本集
    method       : post
    url          : /api/v1/script-sets/:id/do/modify
    response     : json
    requireSignIn: true
    privilege    : general_w
    params:
      id:
        $desc: 脚本集ID
        $type: string
    body:
      data:
        $isRequired: true
        title:
          $desc      : 标题
          $allowNull : true
          $type      : string
        description:
          $desc      : 描述
          $allowNull : true
          $type      : string
        requirements:
          $desc      : 依赖包
          $allowNull : true
          $type      : string
        isLocked:
          $desc     : 是否锁定
          $allowNull: true
          $type     : boolean
        isPinned:
          $desc      : 是否已置顶
          $allowNull : true
          $type      : boolean
        color:
          $desc      : 着色
          $allowNull : true
          $type      : string

  delete:
    showInDoc    : true
    name         : 删除脚本集
    method       : get
    url          : /api/v1/script-sets/:id/do/delete
    response     : json
    requireSignIn: true
    privilege    : general_w
    params:
      id:
        $desc: 脚本集ID
        $type: string

  clone:
    showInDoc    : true
    name         : 克隆脚本集
    method       : post
    url          : /api/v1/script-sets/:id/do/clone
    response     : json
    requireSignIn: true
    privilege    : general_w
    params:
      id:
        $desc: 脚本集ID
        $type: string
    body:
      newId:
        $desc      : 新脚本集ID
        $isRequired: true
        $type      : string
        $maxLength : 32

  export:
    showInDoc    : true
    name         : 导出脚本集
    method       : post
    url          : /api/v1/script-sets/do/export
    response     : blob
    requireSignIn: $NOT_CONFIG._IS_STREAKING
    privilege    : general_w
    body:
      $isRequired: true
      password:
        $desc      : 指定密码
        $isRequired: true
        $allowNull : true
        $type      : string
        $maxLength : 24
      scriptSetIds:
        $desc      : 导出的脚本集ID列表
        $isRequired: true
        $minLength : 1
        $:
          $desc      : 脚本集ID
          $isRequired: true
          $type      : string
      connectorIds:
        $desc: 导出的连接器ID列表
        $:
          $desc      : 连接器ID
          $isRequired: true
          $type      : string
      envVariableIds:
        $desc: 导出的环境变量ID列表
        $:
          $desc      : 环境变量ID
          $isRequired: true
          $type      : string
      includeAuthLinks:
        $desc     : 是否包含关联的授权链接
        $allowNull: true
        $type     : boolean
      includeCrontabConfigs:
        $desc     : 是否包含关联的自动触发配置
        $allowNull: true
        $type     : boolean
      includeBatches:
        $desc     : 是否包含关联的批处理
        $allowNull: true
        $type     : boolean
      note:
        $desc      : 备注
        $isRequired: true
        $minLength : 1

  import:
    showInDoc    : true
    name         : 导入脚本集
    method       : post
    url          : /api/v1/script-sets/do/import
    response     : json
    requireSignIn: $NOT_CONFIG._IS_STREAKING
    privilege    : general_w
    files:
      $limitSize   : 200M
      $allowedTypes: 'application/octet-stream'
    body:
      packageInstallURL:
        $desc      : 脚本包安装URL地址（指定后从脚本包URL导入）
        $isRequired: false
        $allowNull : true
        $type      : string
      packageInstallId:
        $desc      : 脚本包安装ID（备注用）
        $isRequired: false
        $allowNull : true
        $type      : string
      scriptRecoverPointId:
        $desc      : 脚本还原点ID（指定后从脚本还原点导入）
        $isRequired: false
        $allowNull : true
        $type      : string
      password:
        $desc      : 密码
        $isRequired: false
        $allowNull : true
        $type      : string
      checkOnly:
        $desc      : 是否仅做检查（检查成功后会返回`confirmId`）
        $isRequired: false
        $type      : string # form提交只能接受字符串
        $example   : "true"

  confirmImport:
    showInDoc    : true
    name         : 确认导入脚本集
    method       : post
    url          : /api/v1/script-sets/do/confirm-import
    response     : json
    requireSignIn: true
    privilege    : general_w
    body:
      confirmId:
        $desc      : 确认ID
        $isRequired: true
        $type      : string
        $example   : import-001

# 脚本
scriptAPI:
  list:
    showInDoc    : true
    name         : 列出脚本
    method       : get
    url          : /api/v1/scripts/do/list
    response     : json
    requireSignIn: $NOT_CONFIG._IS_STREAKING
    privilege    : general_r
    export       : true
    paging       : true
    fieldPicking : true
    fieldKicking : true
    orderFields:
      seq       : scpt.seq
      id        : scpt.id
      createTime: scpt.createTime
      updateTime: scpt.updateTime
    fulltextSearchFields:
      FULL_TEXT:
        - scpt.id
        - scpt.code
        - scpt.codeDraft
    fuzzySearch:
      - scpt.id
      - scpt.title
      - scpt.description
      - sset.id
      - sset.title
      - sset.description
    query:
      _withCode:
        $desc: 是否同时返回代码
        $type: bool
      _withCodeDraft:
        $desc: 是否同时返回代码草稿
        $type: bool
      id:
        $desc      : 根据ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : scpt.id
      scriptSetId:
        $desc      : 根据所属脚本集ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : scpt.scriptSetId

  get:
    showInDoc    : true
    name         : 脚本详情
    method       : get
    url          : /api/v1/scripts/:id/do/get
    response     : json
    requireSignIn: $NOT_CONFIG._IS_STREAKING
    privilege    : general_r
    params:
      id:
        $desc: 脚本ID
        $type: string

  add:
    showInDoc    : true
    name         : 添加脚本
    method       : post
    url          : /api/v1/scripts/do/add
    response     : json
    requireSignIn: true
    privilege    : general_w
    body:
      data:
        $isRequired: true
        id:
          $desc          : ID
          $isRequired    : true
          $type          : string
          $minLength     : 1
          $maxLength     : 64
          $matchRegExp   : ^[a-zA-Z_][a-zA-Z0-9_]*__[a-zA-Z_][a-zA-Z0-9_]*$
        title:
          $desc      : 标题
          $allowNull : true
          $type      : string
        description:
          $desc     : 描述
          $allowNull: true
          $type     : string
        codeDraft:
          $desc      : 草稿
          $isRequired: false
          $type      : string

  modify:
    showInDoc    : true
    name         : 修改脚本
    method       : post
    url          : /api/v1/scripts/:id/do/modify
    response     : json
    requireSignIn: true
    privilege    : general_w
    params:
      id:
        $desc: 脚本ID
        $type: string
    body:
      prevCodeDraftMD5:
        $desc    : 修改前的草稿MD5
        $required: false
        $type    : string
      data:
        $isRequired: true
        title:
          $desc      : 标题
          $allowNull : true
          $type      : string
        description:
          $desc      : 描述
          $allowNull : true
          $type      : string
        codeDraft:
          $desc      : 草稿（需同时传递`prevCodeDraftMD5`参数）
          $isRequired: false
          $type      : string
        isLocked:
          $desc     : 是否锁定
          $allowNull: true
          $type     : boolean

  delete:
    showInDoc    : true
    name         : 删除脚本
    method       : get
    url          : /api/v1/scripts/:id/do/delete
    response     : json
    requireSignIn: true
    privilege    : general_w
    params:
      id:
        $desc: 脚本ID
        $type: string

  publish:
    showInDoc    : true
    name         : 发布脚本
    method       : post
    url          : /api/v1/scripts/:id/do/publish
    response     : json
    requireSignIn: true
    privilege    : general_w
    params:
      id:
        $desc: 脚本ID
        $type: string
    body:
      force:
        $desc   : 强制发布（即使代码未修改也执行发布）
        $type   : boolean
        $example: false
      wait:
        $desc   : 等待发布结束
        $type   : boolean
        $example: false
      data:
        $isRequired: false
        note:
          $desc      : 发布备注
          $isRequired: false
          $type      : string

# 函数
funcAPI:
  list:
    showInDoc    : true
    name         : 列出函数
    method       : get
    url          : /api/v1/funcs/do/list
    response     : json
    requireSignIn: $NOT_CONFIG._IS_STREAKING
    privilege    : general_r
    paging       : true
    fieldPicking : true
    fieldKicking : true
    orderFields:
      seq     : func.seq
      id      : func.id
      defOrder: func.defOrder
    fuzzySearch:
      - func.id
      - func.title
      - func.description
    query:
      _asFuncDoc:
        $desc      : 以函数文档形式返回
        $type      : boolean
      id:
        $desc      : 按函数ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.id
      scriptSetId:
        $desc      : 按所属脚本集ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.scriptSetId
      scriptId:
        $desc      : 按所属脚本ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.scriptId
      category:
        $desc      : 根据类型过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.category
      integration:
        $desc      : 根据集成过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.integration
      tags:
        $desc      : 根据函数标签过滤
        $type      : commaArray
        $searchType: jsonArrayHasAll
        $searchKey : tagsJSON

# 脚本日志
scriptLogAPI:
  list:
    showInDoc    : true
    name         : 列出脚本日志
    method       : get
    url          : /api/v1/script-logs/do/list
    response     : json
    requireSignIn: true
    privilege    : general_r
    paging       : true
    fieldPicking : true
    fieldKicking : true
    orderFields:
      seq: slog.seq
    fuzzySearch:
      - slog.messageTEXT
      - func.id
      - func.title
      - func.description
    query:
      id:
        $desc      : 按日志ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : slog.id
      funcId:
        $desc      : 按函数ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : slog.funcId

# 脚本故障
scriptFailureAPI:
  list:
    showInDoc    : true
    name         : 列出脚本故障
    method       : get
    url          : /api/v1/script-failures/do/list
    response     : json
    requireSignIn: true
    privilege    : general_r
    paging       : true
    fieldPicking : true
    fieldKicking : true
    orderFields:
      seq: sfal.seq
    fuzzySearch:
      - sfal.einfoTEXT
      - func.id
      - func.title
      - func.description
    query:
      id:
        $desc      : 按故障ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : sfal.id
      funcId:
        $desc      : 按函数ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : sfal.funcId

# 脚本还原点
scriptRecoverPointAPI:
  list:
    showInDoc    : true
    name         : 列出脚本还原点
    method       : get
    url          : /api/v1/script-recover-points/do/list
    response     : json
    requireSignIn: true
    privilege    : general_r
    export       : true
    paging       : marker
    fieldPicking : true
    fieldKicking : true
    orderFields:
      seq: srpt.seq
    fuzzySearch:
      - srpt.note
    query:
      id:
        $desc      : 根据ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : srpt.id
      type:
        $desc      : 根据类型过滤
        $type      : commaArray
        $searchType: in
        $searchKey : srpt.type
        $commaArrayIn:
          - import
          - recover
          - manual
      note:
        $desc      : 根据备注搜索
        $type      : string
        $searchType: like
        $searchKey : srpt.note

  add:
    showInDoc    : true
    name         : 添加脚本还原点
    method       : post
    url          : /api/v1/script-recover-points/do/add
    response     : json
    requireSignIn: true
    privilege    : general_w
    body:
      data:
        $isRequired: true
        note:
          $desc      : 备注（手动创建时必须填写）
          $isRequired: true
          $type      : string
          $minLength : 1

  recover:
    showInDoc    : true
    name         : 还原至脚本还原点
    method       : post
    url          : /api/v1/script-recover-points/:id/do/recover
    response     : json
    requireSignIn: true
    privilege    : general_w
    params:
      id:
        $desc: 连接器ID
        $type: string

# 脚本发布历史
scriptPublishHistoryAPI:
  list:
    showInDoc    : true
    name         : 列出脚本发布历史
    method       : get
    url          : /api/v1/script-publish-history/do/list
    response     : json
    requireSignIn: true
    privilege    : general_r
    export       : true
    paging       : true
    fieldPicking : true
    fieldKicking : true
    orderFields:
      seq: scph.seq
    fulltextSearchFields:
      FULL_TEXT:
        - scph.scriptCode_cache
    fuzzySearch:
      - scph.scriptCode_cache
      - scph.note
    query:
      id:
        $desc      : 根据ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : scph.id
      scriptId:
        $desc      : 根据脚本ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : scph.scriptId
      scriptPublishVersion:
        $desc      : 根据脚本版本过滤
        $type      : commaArray
        $searchType: in
        $searchKey : scph.scriptPublishVersion

# 脚本集导出历史
scriptSetExportHistoryAPI:
  list:
    showInDoc    : true
    name         : 列出脚本集导出历史
    method       : get
    url          : /api/v1/script-set-export-history/do/list
    response     : json
    requireSignIn: true
    privilege    : general_r
    export       : true
    paging       : true
    fieldPicking : true
    fieldKicking : true
    orderFields:
      seq: sseh.seq
    fuzzySearch:
      - sseh.note
    query:
      id:
        $desc      : 根据ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : sseh.id

# 脚本集导入历史
scriptSetImportHistoryAPI:
  list:
    showInDoc    : true
    name         : 列出脚本集导入历史
    method       : get
    url          : /api/v1/script-set-import-history/do/list
    response     : json
    requireSignIn: true
    privilege    : general_r
    export       : true
    paging       : true
    fieldPicking : true
    fieldKicking : true
    orderFields:
      seq: ssih.seq
    fuzzySearch:
      - ssih.note
    query:
      id:
        $desc      : 根据ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : ssih.id

# 连接器
connectorAPI:
  list:
    showInDoc    : true
    name         : 列出连接器
    method       : get
    url          : /api/v1/connectors/do/list
    response     : json
    requireSignIn: true
    privilege    : general_r
    export       : true
    paging       : true
    fieldPicking : true
    fieldKicking : true
    orderFields:
      id : cnct.id
      seq: cnct.seq
    fuzzySearch:
      - cnct.id
      - cnct.title
      - cnct.description
    query:
      id:
        $desc      : 根据ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : cnct.id
      type:
        $desc      : 根据类型过滤
        $type      : commaArray
        $searchType: in
        $searchKey : cnct.type
        $commaArrayIn:
          - df_dataway
          - df_datakit
          - dff_sidecar
          - influxdb
          - mysql
          - redis
          - memcached
          - clickhouse
          - oracle
          - sqlserver
          - postgresql
          - mongodb
          - elasticsearch
          - nsq
          - mqtt
          - kafka

  add:
    showInDoc    : true
    name         : 添加连接器
    method       : post
    url          : /api/v1/connectors/do/add
    response     : json
    requireSignIn: true
    privilege    : general_w
    body:
      data:
        $isRequired: true
        id:
          $desc       : ID
          $isRequired : true
          $type       : string
          $matchRegExp: ^[a-zA-Z_][a-zA-Z0-9_]*$
        title:
          $desc      : 标题
          $allowNull : true
          $type      : string
        description:
          $desc      : 描述
          $allowNull : true
          $type      : string
        type:
          $desc      : 类型
          $isRequired: true
          $type      : enum
          $in:
            - df_dataway
            - df_datakit
            - dff_sidecar
            - influxdb
            - mysql
            - redis
            - memcached
            - clickhouse
            - oracle
            - sqlserver
            - postgresql
            - mongodb
            - elasticsearch
            - nsq
            - mqtt
            - kafka
          $example: mysql
        configJSON:
          $desc      : 配置JSON（根据不同类型，需要包含的字段有所不同。提交时检查，3秒超时）
          $isRequired: true
          host:
            $desc     : 主机
            $allowNull: true
            $type     : string
            $example  : localhost
          port:
            $desc     : 端口
            $allowNull: true
            $type     : int
            $example  : 3306
          servers:
            $desc     : 服务器列表
            $allowNull: true
            $type     : string
            $example  : 'localhost:11211,localhost:11212'
          protocol:
            $desc     : 协议
            $allowNull: true
            $type     : enum
            $in:
              - http
              - https
          source:
            $desc     : 源
            $allowNull: true
            $type     : string
          database:
            $desc     : 数据库
            $allowNull: true
            $type     : string
            $example  : dev
          user:
            $desc     : 用户
            $allowNull: true
            $type     : string
            $example  : dev
          password:
            $desc     : 密码
            $allowNull: true
            $type     : string
            $example  : dev
          charset:
            $desc     : 编码
            $allowNull: true
            $type     : string
            $example  : utf8mb4
          token:
            $desc     : Token
            $allowNull: true
            $type     : string
          accessKey:
            $desc     : Access Key
            $allowNull: true
            $type     : string
          secretKey:
            $desc     : Secret Key
            $allowNull: true
            $type     : string
          clientId:
            $desc     : 客户端ID
            $allowNull: true
            $type     : string
          groupId:
            $desc     : 组ID
            $allowNull: true
            $type     : string
          securityProtocol:
            $desc     : 安全协议
            $allowNull: true
            $type     : string
          saslMechanisms:
            $desc     : SASL机制
            $allowNull: true
            $type     : string
          multiSubClient:
            $desc     : 多订阅器
            $allowNull: true
            $type     : boolean
          kafkaSubOffset:
            $desc     : Kafka 订阅 Offset
            $allowNull: true
            $type     : string
            $example  : 'end'
          topicHandlers:
            $desc     : 主题处理函数
            $allowNull: true
            $:
              topic:
                $desc     : 主题
                $type     : string
                $allowNull: true
              funcId:
                $desc     : 处理函数
                $type     : string
                $allowNull: true
          meta:
            $desc     : Meta数据（仅限API添加）
            $allowNull: true
            $type     : json
        isPinned:
          $desc      : 是否已置顶
          $allowNull : true
          $type      : boolean

  modify:
    showInDoc    : true
    name         : 修改连接器
    method       : post
    url          : /api/v1/connectors/:id/do/modify
    response     : json
    requireSignIn: true
    privilege    : general_w
    params:
      id:
        $desc: 连接器ID
        $type: string
    body:
      data:
        $isRequired: true
        title:
          $desc      : 标题
          $allowNull : true
          $type      : string
        description:
          $desc      : 描述
          $allowNull : true
          $type      : string
        configJSON:
          $desc      : 配置JSON（根据不同类型，需要包含的字段有所不同。修改后重新检查，3秒超时）
          $isRequired: false
          host:
            $desc     : 主机
            $allowNull: true
            $type     : string
            $example  : localhost
          port:
            $desc     : 端口
            $allowNull: true
            $type     : int
            $example  : 3306
          servers:
            $desc     : 服务器列表
            $allowNull: true
            $type     : string
            $example  : 'localhost:11211,localhost:11212'
          protocol:
            $desc     : 协议
            $allowNull: true
            $type     : enum
            $in:
              - http
              - https
          source:
            $desc     : 源
            $allowNull: true
            $type     : string
          database:
            $desc     : 数据库
            $allowNull: true
            $type     : string
            $example  : dev
          user:
            $desc     : 用户
            $allowNull: true
            $type     : string
            $example  : dev
          password:
            $desc     : 密码
            $allowNull: true
            $type     : string
            $example  : dev
          charset:
            $desc     : 编码
            $allowNull: true
            $type     : string
            $example  : utf8mb4
          token:
            $desc     : Token
            $allowNull: true
            $type     : string
          accessKey:
            $desc     : Access Key
            $allowNull: true
            $type     : string
          secretKey:
            $desc     : Secret Key
            $allowNull: true
            $type     : string
          clientId:
            $desc     : 客户端ID
            $allowNull: true
            $type     : string
          groupId:
            $desc     : 组ID
            $allowNull: true
            $type     : string
          securityProtocol:
            $desc     : 安全协议
            $allowNull: true
            $type     : string
          saslMechanisms:
            $desc     : SASL机制
            $allowNull: true
            $type     : string
          multiSubClient:
            $desc     : 多订阅器
            $allowNull: true
            $type     : boolean
          kafkaSubOffset:
            $desc     : Kafka 订阅 Offset
            $allowNull: true
            $type     : string
            $example  : 'end'
          topicHandlers:
            $desc     : 主题处理函数
            $allowNull: true
            $:
              topic:
                $desc     : 主题
                $type     : string
                $allowNull: true
              funcId:
                $desc     : 处理函数
                $type     : string
                $allowNull: true
          meta:
            $desc     : Meta数据（仅限API添加）
            $allowNull: true
            $type     : json
        isPinned:
          $desc      : 是否已置顶
          $allowNull : true
          $type      : boolean

  delete:
    showInDoc    : true
    name         : 删除连接器
    method       : get
    url          : /api/v1/connectors/:id/do/delete
    response     : json
    requireSignIn: true
    privilege    : general_w
    params:
      id:
        $desc: 连接器ID
        $type: string

  query:
    showInDoc    : true
    name         : 查询连接器
    descType: markdown
    desc: |
      查询语句根据连接器类型不同而不同：

      |   连接器类型    |                   查询语句示例                  |
      |-----------------|-------------------------------------------------|
      | `df_dataway`    | 使用封装方法操作，不适用SQL语句                 |
      | `df_datakit`    | 使用封装方法操作，不适用SQL语句                 |
      | `dff_sidecar`   | 使用封装方法操作，不适用SQL语句                 |
      | `influx`        | `"SELECT * FROM some_measurement LIMIT 10"`     |
      | `mysql`         | `"SELECT * FROM some_table LIMIT 10"`           |
      | `redis`         | `"GET some_key"`                                |
      | `memcached`     | `"GET some_key"`                                |
      | `clickhouse`    | `"SELECT * FROM some_table LIMIT 10"`           |
      | `oracle`        | `"SELECT * FROM SOME_TABLE WHERE ROWNUM <= 10"` |
      | `sqlserver`     | `"SELECT TOP 10 * FROM some_table"`             |
      | `postgresql`    | `"SELECT * FROM some_table LIMIT 10"`           |
      | `mongodb`       | 使用封装方法操作，不适用SQL语句                 |
      | `elasticsearch` | `"GET /_search?q=field:value"`                  |
      | `nsq`           | 使用封装方法操作，不适用SQL语句                 |
      | `mqtt`          | 使用封装方法操作，不适用SQL语句                 |
      | `kafka`         | 使用封装方法操作，不适用SQL语句                 |

    method       : post
    url          : /api/v1/connectors/:id/do/query
    response     : json
    requireSignIn: true
    privilege    : general_w
    params:
      id:
        $desc: 连接器ID
        $type: string
    body:
      database:
        $desc     : 指定数据库
        $allowNull: true
        $type     : string
      queryStatement:
        $desc      : 查询语句
        $isRequired: true
        $type      : string
        $example   : SHOW TABLES
      returnType:
        $desc     : 返回类型（默认json）
        $allowNull: true
        $type     : enum
        $in:
          - repr
          - json

  test:
    showInDoc    : true
    name         : 测试连接器
    method       : get
    url          : /api/v1/connectors/:id/do/test
    response     : json
    requireSignIn: true
    privilege    : general_w
    params:
      id:
        $desc: 连接器ID
        $type: string

  listSubInfo:
    showInDoc    : true
    name         : 获取订阅信息列表
    method       : get
    url          : /api/v1/connector-sub-info/do/list
    response     : json
    requireSignIn: true
    privilege    : general_r
    query:
      connectorId:
        $desc: 连接器ID
        $type: string

# 环境变量
envVariableAPI:
  list:
    showInDoc    : true
    name         : 列出环境变量
    method       : get
    url          : /api/v1/env-variables/do/list
    response     : json
    requireSignIn: true
    privilege    : general_r
    export       : true
    paging       : true
    fieldPicking : true
    fieldKicking : true
    orderFields:
      seq: evar.seq
      id : evar.id
    fuzzySearch:
      - evar.id
      - evar.title
      - evar.description
      - evar.valueTEXT
    query:
      id:
        $desc      : 根据ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : evar.id

  add:
    showInDoc    : true
    name         : 添加环境变量
    method       : post
    url          : /api/v1/env-variables/do/add
    response     : json
    requireSignIn: true
    privilege    : general_w
    body:
      data:
        $isRequired: true
        id:
          $desc       : 引用名
          $isRequired : true
          $type       : string
          $matchRegExp: ^[a-zA-Z_][a-zA-Z0-9_]*$
        title:
          $desc      : 标题
          $allowNull : true
          $type      : string
        description:
          $desc      : 描述
          $allowNull : true
          $type      : string
        valueTEXT:
          $desc      : 值
          $isRequired: false
          $type      : string
        autoTypeCasting:
          $desc      : 自动类型转换
          $isRequired: false
          $type      : enum
          $in:
            - string
            - integer
            - float
            - boolean
            - json
            - commaArray
        isPinned:
          $desc      : 是否已置顶
          $allowNull : true
          $type      : boolean

  modify:
    showInDoc    : true
    name         : 修改环境变量
    method       : post
    url          : /api/v1/env-variables/:id/do/modify
    response     : json
    requireSignIn: true
    privilege    : general_w
    params:
      id:
        $desc: 环境变量ID
        $type: string
    body:
      data:
        $isRequired: true
        title:
          $desc      : 标题
          $allowNull : true
          $type      : string
        description:
          $desc      : 描述
          $allowNull : true
          $type      : string
        valueTEXT:
          $desc      : 值
          $isRequired: false
          $type      : string
        autoTypeCasting:
          $desc      : 自动类型转换
          $isRequired: false
          $type      : enum
          $in:
            - string
            - integer
            - float
            - boolean
            - json
            - commaArray
        isPinned:
          $desc      : 是否已置顶
          $allowNull : true
          $type      : boolean

  delete:
    showInDoc    : true
    name         : 删除环境变量
    method       : get
    url          : /api/v1/env-variables/:id/do/delete
    response     : json
    requireSignIn: true
    privilege    : general_w
    params:
      id:
        $desc: 环境变量ID
        $type: string

# API认证
apiAuthAPI:
  list:
    showInDoc    : true
    name         : 列出API认证
    method       : get
    url          : /api/v1/api-auth/do/list
    response     : json
    requireSignIn: true
    privilege    : general_r
    export       : true
    paging       : true
    fieldPicking : true
    fieldKicking : true
    orderFields:
      id : apia.id
      seq: apia.seq
    fuzzySearch:
      - apia.id
      - apia.name
      - apia.configJSON
      - apia.note
    query:
      id:
        $desc      : 根据ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : apia.id
      type:
        $desc      : 根据类型过滤
        $type      : commaArray
        $searchType: in
        $searchKey : apia.type
        $commaArrayIn:
          - fixedField
          - httpBasic
          - httpDigest
          - func
      name:
        $desc      : 根据名称搜索
        $type      : string
        $searchType: like
        $searchKey : apia.name
      note:
        $desc      : 根据备注搜索
        $type      : string
        $searchType: like
        $searchKey : apia.note

  add:
    showInDoc    : true
    name         : 添加API认证
    method       : post
    url          : /api/v1/api-auth/do/add
    response     : json
    requireSignIn: true
    privilege    : general_w
    body:
      data:
        $isRequired: true
        name:
          $desc      : 名称
          $allowNull : true
          $type      : string
        type:
          $desc      : 类型
          $isRequired: true
          $type      : enum
          $in:
            - fixedField
            - httpBasic
            - httpDigest
            - func
          $example: httpBasic
        configJSON:
          $desc      : 配置JSON（根据不同类型，需要包含的字段有所不同）
          $isRequired: true
          fields:
            $desc: 字段列表
            $allowNull: true
            $:
              location:
                $desc      : 字段位置
                $isRequired: true
                $type      : enum
                $in:
                  - header
                  - query
                  - body
              name:
                $desc      : 字段名
                $isRequired: true
                $type      : string
              value:
                $desc      : 字段值
                $isRequired: true
                $type      : string
          users:
            $desc: 用户列表
            $allowNull: true
            $:
              username:
                $desc      : 用户名
                $isRequired: true
                $type      : string
              password:
                $desc      : 用户名
                $isRequired: true
                $type      : string
          funcId:
            $desc     : 认证函数ID
            $allowNull: true
            $type     : string
        note:
          $desc      : 备注
          $allowNull : true
          $type      : string

  modify:
    showInDoc    : true
    name         : 修改API认证
    method       : post
    url          : /api/v1/api-auth/:id/do/modify
    response     : json
    requireSignIn: true
    privilege    : general_w
    params:
      id:
        $desc: API认证ID
        $type: string
    body:
      data:
        $isRequired: true
        name:
          $desc      : 名称
          $allowNull : true
          $type      : string
        configJSON:
          $desc      : 配置JSON（根据不同类型，需要包含的字段有所不同）
          $isRequired: false
          fields:
            $desc: 字段列表
            $allowNull: true
            $:
              location:
                $desc      : 字段位置
                $isRequired: true
                $type      : enum
                $in:
                  - header
                  - query
                  - body
              name:
                $desc      : 字段名
                $isRequired: true
                $type      : string
              value:
                $desc      : 字段值
                $isRequired: true
                $type      : string
          users:
            $desc: 用户列表
            $allowNull: true
            $:
              username:
                $desc      : 用户名
                $isRequired: true
                $type      : string
              password:
                $desc      : 密码
                $isRequired: false
                $type      : string
          funcId:
            $desc     : 认证函数ID
            $allowNull: true
            $type     : string
        note:
          $desc      : 备注
          $allowNull : true
          $type      : string

  delete:
    showInDoc    : true
    name         : 删除API认证
    method       : get
    url          : /api/v1/api-auth/:id/do/delete
    response     : json
    requireSignIn: true
    privilege    : general_w
    params:
      id:
        $desc: API认证ID
        $type: string

# 授权链接
authLinkAPI:
  list:
    showInDoc    : true
    name         : 列出授权链接
    method       : get
    url          : /api/v1/auth-links/do/list
    response     : json
    requireSignIn: true
    privilege    : general_r
    export       : true
    paging       : true
    fieldPicking : true
    fieldKicking : true
    orderFields:
      seq   : auln.seq
      funcId: auln.funcId
    fuzzySearch:
      - auln.id
      - auln.funcId
      - auln.funcCallKwargsJSON
      - auln.tagsJSON
      - auln.note
      - func.title
      - func.description
      - func.tagsJSON
    query:
      _withTaskInfo:
        $desc: 是否附带任务信息
        $type: boolean
      id:
        $desc      : 根据ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : auln.id
      funcId:
        $desc      : 根据函数ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : auln.funcId
      tags:
        $desc      : 根据授权链接标签过滤
        $type      : commaArray
        $searchType: jsonArrayHasAll
        $searchKey : auln.tagsJSON
      origin:
        $desc      : 根据来源过滤
        $type      : commaArray
        $searchType: in
        $searchKey : auln.origin
        $commaArrayIn:
          - API
          - UI
      func_scriptSetId:
        $desc      : 根据脚本集ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.scriptSetId
      func_scriptId:
        $desc      : 根据脚本ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.scriptId
      func_tags:
        $desc      : 根据执行函数标签过滤
        $type      : commaArray
        $searchType: jsonArrayHasAll
        $searchKey : func.tagsJSON

  add:
    showInDoc    : true
    name         : 添加授权链接
    descType: markdown
    desc: |
      可以通过`data.funcCallKwargsJSON`限制最终调用方传递参数。

      如存在函数`def func(arg1, arg2, arg3, arg4=None)`，且配置为以下内容：

      ```json
      {
        "data": {
          "funcCallKwargsJSON": {
            "arg1": "hello, world.",
            "arg2": null,
            "arg3": "INPUT_BY_CALLER"
          },
          ...
        }
      }
      ```

      则表示：

      - `"arg1"`参数：*不允许*调用时指定，调用时自动指定参数值为`"hello, world."`
      - `"arg2"`参数：*不允许*调用时指定，调用时自动指定参数值为`null`
      - `"arg3"`参数：允许调用时指定
      - `"arg4"`参数：*不允许*调用时指定，调用时也不传递此参数

    method       : post
    url          : /api/v1/auth-links/do/add
    response     : json
    requireSignIn: true
    privilege    : general_w
    body:
      data:
        $isRequired: true
        id:
          $desc      : ID（不指定自动生成）
          $isRequired: false
          $allowNull : true
          $type      : string
        funcId:
          $desc      : 函数ID
          $isRequired: true
          $type      : string
        funcCallKwargsJSON:
          $desc      : 函数调用参数JSON (kwargs)
          $isRequired: true
          $type      : json
          $example   : {"msg": "INPUT_BY_CALLER"}
        tagsJSON:
          $desc     : 授权链接标签（直接替换完整数组）
          $allowNull: true
          $:
            $desc      : 标签
            $isRequired: true
            $type      : string
        apiAuthId:
          $desc     : API认证ID
          $allowNull: true
          $type     : string
        expireTime:
          $desc      : 过期时间（ISO8601格式）
          $allowNull : true
          $type      : string
          $isISO8601 : true
          $example   : '2019-01-01T00:00:00Z'
        throttlingJSON:
          $desc      : 限流JSON
          $allowNull : true
          bySecond:
            $desc     : 按秒限流（次数）
            $allowNull: true
            $type     : int
            $minValue : 1
            $example  : 2
          byMinute:
            $desc     : 按分钟限流（次数）
            $allowNull: true
            $type     : int
            $minValue : 1
            $example  : 5
          byHour:
            $desc     : 按小时限流（次数）
            $allowNull: true
            $type     : int
            $minValue : 1
            $example  : 10
          byDay:
            $desc     : 按天限流（次数）
            $allowNull: true
            $type     : int
            $minValue : 1
            $example  : 100
          byMonth:
            $desc     : 按月限流（次数）
            $allowNull: true
            $type     : int
            $minValue : 1
            $example  : 1000
          byYear:
            $desc     : 按年限流（次数）
            $allowNull: true
            $type     : int
            $minValue : 1
            $example  : 10000
        origin:
          $desc        : 来源
          $isDeprecated: true
          $isRequired  : false
          $type        : enum
          $in:
            - API
            - UI
        showInDoc:
          $desc      : 是否显示于文档
          $isRequired: false
          $type      : boolean
        taskInfoLimit:
          $desc      : 近期任务保留数
          $isRequired: false
          $allowNull : true
          $type      : int
          $minValue  : 0
          $maxValue  : 5000
        isDisabled:
          $desc      : 是否禁用
          $isRequired: false
          $type      : boolean
        note:
          $desc      : 备注
          $allowNull : true
          $type      : string

  modify:
    showInDoc    : true
    name         : 修改授权链接
    method       : post
    url          : /api/v1/auth-links/:id/do/modify
    response     : json
    requireSignIn: true
    privilege    : general_w
    params:
      id:
        $desc: 授权链接ID
        $type: string
    body:
      data:
        $isRequired: true
        funcId:
          $desc      : 函数ID
          $isRequired: false
          $type      : string
        funcCallKwargsJSON:
          $desc      : 函数调用参数JSON (kwargs)
          $isRequired: false
          $type      : json
          $example  : {"msg": "INPUT_BY_CALLER"}
        tagsJSON:
          $desc     : 授权链接标签（直接替换完整数组）
          $allowNull: true
          $:
            $desc      : 标签
            $isRequired: true
            $type      : string
        apiAuthId:
          $desc     : API认证ID
          $allowNull: true
          $type     : string
        expireTime:
          $desc      : 过期时间（ISO8601格式）
          $allowNull : true
          $type      : string
          $isISO8601 : true
          $example   : '2019-01-01T00:00:00Z'
        throttlingJSON:
          $desc      : 限流JSON
          $allowNull : true
          bySecond:
            $desc     : 按秒限流（次数）
            $allowNull: true
            $type     : int
            $minValue : 1
            $example  : 2
          byMinute:
            $desc     : 按分钟限流（次数）
            $allowNull: true
            $type     : int
            $minValue : 1
            $example  : 5
          byHour:
            $desc     : 按小时限流（次数）
            $allowNull: true
            $type     : int
            $minValue : 1
            $example  : 10
          byDay:
            $desc     : 按天限流（次数）
            $allowNull: true
            $type     : int
            $minValue : 1
            $example  : 100
          byMonth:
            $desc     : 按月限流（次数）
            $allowNull: true
            $type     : int
            $minValue : 1
            $example  : 1000
          byYear:
            $desc     : 按年限流（次数）
            $allowNull: true
            $type     : int
            $minValue : 1
            $example  : 10000
        showInDoc:
          $desc      : 是否显示于文档
          $isRequired: false
          $type      : boolean
        taskInfoLimit:
          $desc      : 近期任务保留数
          $isRequired: false
          $allowNull : true
          $type      : int
          $minValue  : 0
          $maxValue  : 5000
        isDisabled:
          $desc      : 是否禁用
          $isRequired: false
          $type      : boolean
        note:
          $desc      : 备注
          $allowNull : true
          $type      : string

  delete:
    showInDoc    : true
    name         : 删除授权链接
    method       : get
    url          : /api/v1/auth-links/:id/do/delete
    response     : json
    requireSignIn: true
    privilege    : general_w
    params:
      id:
        $desc: 授权链接ID
        $type: string

  addMany:
    showInDoc    : true
    name         : 批量添加授权链接
    method       : post
    url          : /api/v1/auth-links/do/add-many
    response     : json
    requireSignIn: true
    privilege    : general_w
    body:
      data:
        $isRequired: true
        $:
          id:
            $desc      : ID（不指定自动生成）
            $isRequired: false
            $allowNull : true
            $type      : string
          funcId:
            $desc      : 函数ID
            $isRequired: true
            $type      : string
          funcCallKwargsJSON:
            $desc      : 函数调用参数JSON (kwargs)
            $isRequired: true
            $type      : json
            $example   : {"msg": "INPUT_BY_CALLER"}
          tagsJSON:
            $desc     : 授权链接标签（直接替换完整数组）
            $allowNull: true
            $:
              $desc      : 标签
              $isRequired: true
              $type      : string
          apiAuthId:
            $desc     : API认证ID
            $allowNull: true
            $type     : string
          expireTime:
            $desc      : 过期时间（ISO8601格式）
            $allowNull : true
            $type      : string
            $isISO8601 : true
            $example   : '2019-01-01T00:00:00Z'
          throttlingJSON:
            $desc      : 限流JSON
            $allowNull : true
            bySecond:
              $desc     : 按秒限流（次数）
              $allowNull: true
              $type     : int
              $minValue : 1
              $example  : 2
            byMinute:
              $desc     : 按分钟限流（次数）
              $allowNull: true
              $type     : int
              $minValue : 1
              $example  : 5
            byHour:
              $desc     : 按小时限流（次数）
              $allowNull: true
              $type     : int
              $minValue : 1
              $example  : 10
            byDay:
              $desc     : 按天限流（次数）
              $allowNull: true
              $type     : int
              $minValue : 1
              $example  : 100
            byMonth:
              $desc     : 按月限流（次数）
              $allowNull: true
              $type     : int
              $minValue : 1
              $example  : 1000
            byYear:
              $desc     : 按年限流（次数）
              $allowNull: true
              $type     : int
              $minValue : 1
              $example  : 10000
          origin:
            $desc        : 来源
            $isDeprecated: true
            $isRequired  : false
            $type        : enum
            $in:
              - API
              - UI
          showInDoc:
            $desc      : 是否显示于文档
            $isRequired: false
            $type      : boolean
          taskInfoLimit:
            $desc      : 近期任务保留数
            $isRequired: false
            $allowNull : true
            $type      : int
            $minValue  : 0
            $maxValue  : 5000
          isDisabled:
            $desc      : 是否禁用
            $isRequired: false
            $type      : boolean
          note:
            $desc      : 备注
            $allowNull : true
            $type      : string

  modifyMany:
    showInDoc    : true
    name         : 批量修改授权链接
    descType: markdown
    desc: |
      *注意：使用本接口时至少需要制定一个条件，不允许通过不指定条件来修改所有数据*

      当指定`funcCallKwargsJSON`时，会在*函数的参数级别*进行替换，如：

      存在函数`def func(a, b)`，那么

      |      更新前      | `funcCallKwargsJSON`参数 |         更新后         |
      |------------------|--------------------------|------------------------|
      | {"a": 1, "b": 2} | { "a": 8, "b": 9 }       | { *"a": 8*, *"b": 9* } |
      | {"a": 1, "b": 2} | { "b": 9 }`              | { "a": 1, *"b": 9* }   |

    method       : post
    url          : /api/v1/auth-links/do/modify-many
    response     : json
    requireSignIn: true
    privilege    : general_w
    query:
      id:
        $desc      : 根据ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : auln.id
      funcId:
        $desc      : 根据函数ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : auln.funcId
      tags:
        $desc      : 根据授权链接标签过滤
        $type      : commaArray
        $searchType: jsonArrayHasAll
        $searchKey : auln.tagsJSON
      origin:
        $desc      : 根据来源过滤
        $type      : commaArray
        $searchType: in
        $searchKey : auln.origin
        $commaArrayIn:
          - API
          - UI
      func_scriptSetId:
        $desc      : 根据脚本集ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.scriptSetId
      func_scriptId:
        $desc      : 根据脚本ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.scriptId
      func_tags:
        $desc      : 根据执行函数标签过滤
        $type      : commaArray
        $searchType: jsonArrayHasAll
        $searchKey : func.tagsJSON
    body:
      data:
        $isRequired: true
        funcId:
          $desc      : 函数ID
          $isRequired: false
          $type      : string
        funcCallKwargsJSON:
          $desc      : 函数调用参数JSON (kwargs)
          $isRequired: false
          $type      : json
          $example  : {"msg": "INPUT_BY_CALLER"}
        tagsJSON:
          $desc     : 授权链接标签（直接替换完整数组）
          $allowNull: true
          $:
            $desc      : 标签
            $isRequired: true
            $type      : string
        apiAuthId:
          $desc     : API认证ID
          $allowNull: true
          $type     : string
        taskInfoLimit:
          $desc      : 近期任务保留数
          $isRequired: false
          $allowNull : true
          $type      : int
          $minValue  : 0
          $maxValue  : 5000
        isDisabled:
          $desc      : 是否禁用
          $isRequired: false
          $type      : boolean
        note:
          $desc      : 备注
          $allowNull : true
          $type      : string

  deleteMany:
    showInDoc    : true
    name         : 批量删除授权链接
    descType: markdown
    desc: |
      *注意：使用本接口时至少需要制定一个条件，不允许通过不指定条件来清空所有数据*
    method       : get
    url          : /api/v1/auth-links/do/delete-many
    response     : json
    requireSignIn: true
    privilege    : general_w
    query:
      id:
        $desc      : 根据ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : auln.id
      funcId:
        $desc      : 根据函数ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : auln.funcId
      tags:
        $desc      : 根据授权链接标签过滤
        $type      : commaArray
        $searchType: jsonArrayHasAll
        $searchKey : auln.tagsJSON
      origin:
        $desc      : 根据来源过滤
        $type      : commaArray
        $searchType: in
        $searchKey : auln.origin
        $commaArrayIn:
          - API
          - UI
      func_scriptSetId:
        $desc      : 根据脚本集ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.scriptSetId
      func_scriptId:
        $desc      : 根据脚本ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.scriptId
      func_tags:
        $desc      : 根据执行函数标签过滤
        $type      : commaArray
        $searchType: jsonArrayHasAll
        $searchKey : func.tagsJSON

# 自动触发配置
crontabConfigAPI:
  list:
    showInDoc    : true
    name         : 列出自动触发配置
    method       : get
    url          : /api/v1/crontab-configs/do/list
    response     : json
    requireSignIn: $NOT_CONFIG._IS_STREAKING
    privilege    : general_r
    export       : true
    paging       : true
    fieldPicking : true
    fieldKicking : true
    orderFields:
      seq   : cron.seq
      funcId: cron.funcId
    fuzzySearch:
      - cron.id
      - cron.funcId
      - cron.funcCallKwargsJSON
      - cron.tagsJSON
      - cron.note
      - func.title
      - func.description
      - func.tagsJSON
    query:
      _withTaskInfo:
        $desc: 是否附带任务信息
        $type: boolean
      id:
        $desc      : 根据ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : cron.id
      funcId:
        $desc      : 根据函数ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : cron.funcId
      tags:
        $desc      : 根据自动触发配置标签过滤
        $type      : commaArray
        $searchType: jsonArrayHasAll
        $searchKey : cron.tagsJSON
      scope:
        $desc      : 根据范围过滤
        $type      : commaArray
        $searchType: in
        $searchKey : cron.scope
      origin:
        $desc      : 根据来源过滤
        $type      : commaArray
        $searchType: in
        $searchKey : cron.origin
        $commaArrayIn:
          - API
          - UI
      func_scriptSetId:
        $desc      : 根据脚本集ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.scriptSetId
      func_scriptId:
        $desc      : 根据脚本ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.scriptId
      func_tags:
        $desc      : 根据执行函数标签过滤
        $type      : commaArray
        $searchType: jsonArrayHasAll
        $searchKey : func.tagsJSON

  add:
    showInDoc    : true
    name         : 添加自动触发配置
    descType: markdown
    desc: |
      自动触发配置根据`scope`字段划分不同范围（默认为`"GLOBAL"`表示全局），

      相同范围内的自动触发配置不允许存在2个以上执行函数和调用参数完全相同的配置。

      *对于观测云Studio 的触发器功能在对接自动触发配置时，可以将工作空间UUID作为scope。如："scope": "workspaceUUID=<工作空间UUID>"*

      *`scope`最长不得超过255个字符*
    method       : post
    url          : /api/v1/crontab-configs/do/add
    response     : json
    requireSignIn: $NOT_CONFIG._IS_STREAKING
    privilege    : general_w
    body:
      data:
        $isRequired: true
        funcId:
          $desc      : 函数ID
          $isRequired: true
          $type      : string
        funcCallKwargsJSON:
          $desc      : 函数调用参数JSON (kwargs)
          $isRequired: true
          $type      : json
          $example   : {"msg": "Tom"}
        crontab:
          $desc     : 执行频率（Crontab语法，支持到分钟级）
          $allowNull: true
          $type     : string
          $example  : 0 * * * *
        tagsJSON:
          $desc     : 自动触发配置标签（直接替换完整数组）
          $allowNull: true
          $:
            $desc      : 标签
            $isRequired: true
            $type      : string
        scope:
          $desc     : 范围（默认"GLOBAL"表示全局范围）
          $allowNull: false
          $type     : string
          $maxLength: 255
          $example  : my-uuid
        expireTime:
          $desc      : 过期时间（ISO8601格式）
          $allowNull : true
          $type      : string
          $isISO8601 : true
          $example   : '2019-01-01T00:00:00Z'
        origin:
          $desc        : 来源
          $isDeprecated: true
          $isRequired  : false
          $type        : enum
          $in:
            - API
            - UI
        taskInfoLimit:
          $desc      : 近期任务保留数
          $isRequired: false
          $allowNull : true
          $type      : int
          $minValue  : 0
          $maxValue  : 5000
        isDisabled:
          $desc      : 是否禁用
          $isRequired: false
          $type      : boolean
        note:
          $desc      : 备注
          $allowNull : true
          $type      : string

  modify:
    showInDoc    : true
    name         : 修改自动触发配置
    method       : post
    url          : /api/v1/crontab-configs/:id/do/modify
    response     : json
    requireSignIn: $NOT_CONFIG._IS_STREAKING
    privilege    : general_w
    params:
      id:
        $desc: 自动触发配置ID
        $type: string
    body:
      data:
        $isRequired: true
        funcId:
          $desc      : 函数ID
          $isRequired: false
          $type      : string
        funcCallKwargsJSON:
          $desc      : 函数调用参数JSON (kwargs)
          $isRequired: false
          $type      : json
          $example   : {"msg": "Tom"}
        crontab:
          $desc     : 执行频率（Crontab语法，支持到分钟级）
          $allowNull: true
          $type     : string
          $example  : 0 * * * *
        tagsJSON:
          $desc     : 自动触发配置标签（直接替换完整数组）
          $allowNull: true
          $:
            $desc      : 标签
            $isRequired: true
            $type      : string
        scope:
          $desc     : 范围（默认"GLOBAL"表示全局范围）
          $allowNull: false
          $type     : string
          $maxLength: 255
          $example  : my-uuid
        expireTime:
          $desc      : 过期时间（ISO8601格式）
          $allowNull : true
          $type      : string
          $isISO8601 : true
          $example   : '2019-01-01T00:00:00Z'
        taskInfoLimit:
          $desc      : 近期任务保留数
          $isRequired: false
          $allowNull : true
          $type      : int
          $minValue  : 0
          $maxValue  : 5000
        isDisabled:
          $desc      : 是否禁用
          $isRequired: false
          $type      : boolean
        note:
          $desc      : 备注
          $allowNull : true
          $type      : string

  delete:
    showInDoc    : true
    name         : 删除自动触发配置
    method       : get
    url          : /api/v1/crontab-configs/:id/do/delete
    response     : json
    requireSignIn: $NOT_CONFIG._IS_STREAKING
    privilege    : general_w
    params:
      id:
        $desc: 自动触发配置ID
        $type: string

  addMany:
    showInDoc    : true
    name         : 批量添加自动触发配置
    method       : post
    url          : /api/v1/crontab-configs/do/add-many
    response     : json
    requireSignIn: $NOT_CONFIG._IS_STREAKING
    privilege    : general_w
    body:
      data:
        $isRequired: true
        $:
          funcId:
            $desc      : 函数ID
            $isRequired: true
            $type      : string
          funcCallKwargsJSON:
            $desc      : 函数调用参数JSON (kwargs)
            $isRequired: true
            $type      : json
            $example   : {"msg": "Tom"}
          crontab:
            $desc     : 执行频率（Crontab语法，支持到分钟级）
            $allowNull: true
            $type     : string
            $example  : 0 * * * *
          tagsJSON:
            $desc     : 自动触发配置标签（直接替换完整数组）
            $allowNull: true
            $:
              $desc      : 标签
              $isRequired: true
              $type      : string
          scope:
            $desc     : 范围（默认"GLOBAL"表示全局范围）
            $allowNull: false
            $type     : string
            $maxLength: 255
            $example  : my-uuid
          expireTime:
            $desc      : 过期时间（ISO8601格式）
            $allowNull : true
            $type      : string
            $isISO8601 : true
            $example   : '2019-01-01T00:00:00Z'
          taskInfoLimit:
            $desc      : 近期任务保留数
            $isRequired: false
            $allowNull : true
            $type      : int
            $minValue  : 0
            $maxValue  : 5000
          isDisabled:
            $desc      : 是否禁用
            $isRequired: false
            $type      : boolean
          note:
            $desc      : 备注
            $allowNull : true
            $type      : string

  modifyMany:
    showInDoc    : true
    name         : 批量修改自动触发配置
    descType: markdown
    desc: |
      *注意：使用本接口时至少需要制定一个条件，不允许通过不指定条件来修改所有数据*

      当指定`funcCallKwargsJSON`时，会在*函数的参数级别*进行替换，如：

      存在函数`def func(a, b)`，那么

      |      更新前      | `funcCallKwargsJSON`参数 |       更新后       |
      |------------------|--------------------------|--------------------|
      | {"a": 1, "b": 2} | { "a": 8, "b": 9 }       | { "a": 8, "b": 9 } |
      | {"a": 1, "b": 2} | { "b": 9 }               | { "a": 1, "b": 9 } |

    method       : post
    url          : /api/v1/crontab-configs/do/modify-many
    response     : json
    requireSignIn: $NOT_CONFIG._IS_STREAKING
    privilege    : general_w
    query:
      id:
        $desc      : 根据ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : cron.id
      funcId:
        $desc      : 根据函数ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : cron.funcId
      tags:
        $desc      : 根据自动触发配置标签过滤
        $type      : commaArray
        $searchType: jsonArrayHasAll
        $searchKey : cron.tagsJSON
      scope:
        $desc      : 根据范围过滤
        $type      : commaArray
        $searchType: in
        $searchKey : cron.scope
      origin:
        $desc      : 根据来源过滤
        $type      : commaArray
        $searchType: in
        $searchKey : cron.origin
        $commaArrayIn:
          - API
          - UI
      func_scriptSetId:
        $desc      : 根据脚本集ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.scriptSetId
      func_scriptId:
        $desc      : 根据脚本ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.scriptId
      func_tags:
        $desc      : 根据执行函数标签过滤
        $type      : commaArray
        $searchType: jsonArrayHasAll
        $searchKey : func.tagsJSON
    body:
      data:
        $isRequired: true
        funcId:
          $desc      : 函数ID
          $isRequired: false
          $type      : string
        funcCallKwargsJSON:
          $desc      : 函数调用参数JSON (kwargs)
          $isRequired: false
          $type      : json
          $example   : {"msg": "Tom"}
        crontab:
          $desc     : 执行频率（Crontab语法，支持到分钟级）
          $allowNull: true
          $type     : string
          $example  : 0 * * * *
        tagsJSON:
          $desc     : 自动触发配置标签（直接替换完整数组）
          $allowNull: true
          $:
            $desc      : 标签
            $isRequired: true
            $type      : string
        taskInfoLimit:
          $desc      : 近期任务保留数
          $isRequired: false
          $allowNull : true
          $type      : int
          $minValue  : 0
          $maxValue  : 5000
        isDisabled:
          $desc      : 是否禁用
          $isRequired: false
          $type      : boolean
        note:
          $desc      : 备注
          $allowNull : true
          $type      : string

  deleteMany:
    showInDoc    : true
    name         : 批量删除自动触发配置
    descType: markdown
    desc: |
      *注意：使用本接口时至少需要制定一个条件，不允许通过不指定条件来清空所有数据*
    method       : get
    url          : /api/v1/crontab-configs/do/delete-many
    response     : json
    requireSignIn: $NOT_CONFIG._IS_STREAKING
    privilege    : general_w
    query:
      id:
        $desc      : 根据ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : cron.id
      funcId:
        $desc      : 根据函数ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : cron.funcId
      tags:
        $desc      : 根据自动触发配置标签过滤
        $type      : commaArray
        $searchType: jsonArrayHasAll
        $searchKey : cron.tagsJSON
      scope:
        $desc      : 根据范围过滤
        $type      : commaArray
        $searchType: in
        $searchKey : cron.scope
      origin:
        $desc      : 根据来源过滤
        $type      : commaArray
        $searchType: in
        $searchKey : cron.origin
        $commaArrayIn:
          - API
          - UI
      func_scriptSetId:
        $desc      : 根据脚本集ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.scriptSetId
      func_scriptId:
        $desc      : 根据脚本ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.scriptId
      func_tags:
        $desc      : 根据执行函数标签过滤
        $type      : commaArray
        $searchType: jsonArrayHasAll
        $searchKey : func.tagsJSON

# 批处理
batchAPI:
  list:
    showInDoc    : true
    name         : 列出批处理
    method       : get
    url          : /api/v1/batches/do/list
    response     : json
    requireSignIn: $NOT_CONFIG._IS_STREAKING
    privilege    : general_r
    export       : true
    paging       : true
    fieldPicking : true
    fieldKicking : true
    orderFields:
      seq   : bat.seq
      funcId: bat.funcId
    fuzzySearch:
      - bat.id
      - bat.funcId
      - bat.funcCallKwargsJSON
      - bat.tagsJSON
      - bat.note
      - func.title
      - func.description
      - func.tagsJSON
    query:
      _withTaskInfo:
        $desc: 是否附带任务信息
        $type: boolean
      id:
        $desc      : 根据ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : bat.id
      funcId:
        $desc      : 根据函数ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : bat.funcId
      tags:
        $desc      : 根据批处理标签过滤
        $type      : commaArray
        $searchType: jsonArrayHasAll
        $searchKey : bat.tagsJSON
      origin:
        $desc      : 根据来源过滤
        $type      : commaArray
        $searchType: in
        $searchKey : bat.origin
        $commaArrayIn:
          - API
          - UI
      func_scriptSetId:
        $desc      : 根据脚本集ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.scriptSetId
      func_scriptId:
        $desc      : 根据脚本ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.scriptId
      func_tags:
        $desc      : 根据执行函数标签过滤
        $type      : commaArray
        $searchType: jsonArrayHasAll
        $searchKey : func.tagsJSON

  add:
    showInDoc    : true
    name         : 添加批处理
    descType: markdown
    desc: |
      可以通过`data.funcCallKwargsJSON`限制最终调用方传递参数。

      如存在函数`def func(arg1, arg2, arg3, arg4=None)`，且配置为以下内容：

      ```json
      {
        "data": {
          "funcCallKwargsJSON": {
            "arg1": "hello, world.",
            "arg2": null,
            "arg3": "INPUT_BY_CALLER"
          },
          ...
        }
      }
      ```

      则表示：

      - `"arg1"`参数：*不允许*调用时指定，调用时自动指定参数值为`"hello, world."`
      - `"arg2"`参数：*不允许*调用时指定，调用时自动指定参数值为`null`
      - `"arg3"`参数：允许调用时指定
      - `"arg4"`参数：*不允许*调用时指定，调用时也不传递此参数

    method       : post
    url          : /api/v1/batches/do/add
    response     : json
    requireSignIn: $NOT_CONFIG._IS_STREAKING
    privilege    : general_w
    body:
      data:
        $isRequired: true
        id:
          $desc      : ID（不指定自动生成）
          $isRequired: false
          $allowNull : true
          $type      : string
        funcId:
          $desc      : 函数ID
          $isRequired: true
          $type      : string
        funcCallKwargsJSON:
          $desc      : 函数调用参数JSON (kwargs)
          $isRequired: true
          $type      : json
          $example  : {"msg": "INPUT_BY_CALLER"}
        tagsJSON:
          $desc     : 批处理标签（直接替换完整数组）
          $allowNull: true
          $:
            $desc      : 标签
            $isRequired: true
            $type      : string
        apiAuthId:
          $desc     : API认证ID
          $allowNull: true
          $type     : string
        showInDoc:
          $desc      : 是否显示于文档
          $isRequired: false
          $type      : boolean
        taskInfoLimit:
          $desc      : 近期任务保留数
          $isRequired: false
          $allowNull : true
          $type      : int
          $minValue  : 0
          $maxValue  : 5000
        isDisabled:
          $desc      : 是否禁用
          $isRequired: false
          $type      : boolean
        note:
          $desc      : 备注
          $allowNull : true
          $type      : string

  modify:
    showInDoc    : true
    name         : 修改批处理
    method       : post
    url          : /api/v1/batches/:id/do/modify
    response     : json
    requireSignIn: $NOT_CONFIG._IS_STREAKING
    privilege    : general_w
    params:
      id:
        $desc: 批处理ID
        $type: string
    body:
      data:
        $isRequired: true
        funcId:
          $desc      : 函数ID
          $isRequired: false
          $type      : string
        funcCallKwargsJSON:
          $desc      : 函数调用参数JSON (kwargs)
          $isRequired: false
          $type      : json
          $example   : {"msg": "INPUT_BY_CALLER"}
        tagsJSON:
          $desc     : 批处理标签（直接替换完整数组）
          $allowNull: true
          $:
            $desc      : 标签
            $isRequired: true
            $type      : string
        apiAuthId:
          $desc     : API认证ID
          $allowNull: true
          $type     : string
        showInDoc:
          $desc      : 是否显示于文档
          $isRequired: false
          $type      : boolean
        taskInfoLimit:
          $desc      : 近期任务保留数
          $isRequired: false
          $allowNull : true
          $type      : int
          $minValue  : 0
          $maxValue  : 5000
        isDisabled:
          $desc      : 是否禁用
          $isRequired: false
          $type      : boolean
        note:
          $desc      : 备注
          $allowNull : true
          $type      : string

  delete:
    showInDoc    : true
    name         : 删除批处理
    method       : get
    url          : /api/v1/batches/:id/do/delete
    response     : json
    requireSignIn: $NOT_CONFIG._IS_STREAKING
    privilege    : general_w
    params:
      id:
        $desc: 批处理ID
        $type: string

  addMany:
    showInDoc    : true
    name         : 批量添加批处理
    method       : post
    url          : /api/v1/batches/do/add-many
    response     : json
    requireSignIn: $NOT_CONFIG._IS_STREAKING
    privilege    : general_w
    body:
      data:
        $isRequired: true
        $:
          id:
            $desc      : ID（不指定自动生成）
            $isRequired: false
            $allowNull : true
            $type      : string
          funcId:
            $desc      : 函数ID
            $isRequired: true
            $type      : string
          funcCallKwargsJSON:
            $desc      : 函数调用参数JSON (kwargs)
            $isRequired: true
            $type      : json
            $example  : {"msg": "INPUT_BY_CALLER"}
          tagsJSON:
            $desc     : 批处理标签（直接替换完整数组）
            $allowNull: true
            $:
              $desc      : 标签
              $isRequired: true
              $type      : string
          apiAuthId:
            $desc     : API认证ID
            $allowNull: true
            $type     : string
          showInDoc:
            $desc      : 是否显示于文档
            $isRequired: false
            $type      : boolean
          taskInfoLimit:
            $desc      : 近期任务保留数
            $isRequired: false
            $allowNull : true
            $type      : int
            $minValue  : 0
            $maxValue  : 5000
          isDisabled:
            $desc      : 是否禁用
            $isRequired: false
            $type      : boolean
          note:
            $desc      : 备注
            $allowNull : true
            $type      : string

  modifyMany:
    showInDoc    : true
    name         : 批量修改批处理
    descType: markdown
    desc: |
      *注意：使用本接口时至少需要制定一个条件，不允许通过不指定条件来修改所有数据*

      当指定`funcCallKwargsJSON`时，会在*函数的参数级别*进行替换，如：

      存在函数`def func(a, b)`，那么

      |      更新前      | `funcCallKwargsJSON`参数 |         更新后         |
      |------------------|--------------------------|------------------------|
      | {"a": 1, "b": 2} | { "a": 8, "b": 9 }       | { *"a": 8*, *"b": 9* } |
      | {"a": 1, "b": 2} | { "b": 9 }`              | { "a": 1, *"b": 9* }   |
    method       : post
    url          : /api/v1/batches/do/modify-many
    response     : json
    requireSignIn: $NOT_CONFIG._IS_STREAKING
    privilege    : general_w
    query:
      id:
        $desc      : 根据ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : bat.id
      funcId:
        $desc      : 根据函数ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : bat.funcId
      tags:
        $desc      : 根据批处理标签过滤
        $type      : commaArray
        $searchType: jsonArrayHasAll
        $searchKey : bat.tagsJSON
      origin:
        $desc      : 根据来源过滤
        $type      : commaArray
        $searchType: in
        $searchKey : bat.origin
        $commaArrayIn:
          - API
          - UI
      func_scriptSetId:
        $desc      : 根据脚本集ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.scriptSetId
      func_scriptId:
        $desc      : 根据脚本ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.scriptId
      func_tags:
        $desc      : 根据执行函数标签过滤
        $type      : commaArray
        $searchType: jsonArrayHasAll
        $searchKey : func.tagsJSON
    body:
      data:
        $isRequired: true
        funcId:
          $desc      : 函数ID
          $isRequired: false
          $type      : string
        funcCallKwargsJSON:
          $desc      : 函数调用参数JSON (kwargs)
          $isRequired: false
          $type      : json
          $example   : {"msg": "INPUT_BY_CALLER"}
        tagsJSON:
          $desc     : 批处理标签（直接替换完整数组）
          $allowNull: true
          $:
            $desc      : 标签
            $isRequired: true
            $type      : string
        apiAuthId:
          $desc     : API认证ID
          $allowNull: true
          $type     : string
        taskInfoLimit:
          $desc      : 近期任务保留数
          $isRequired: false
          $allowNull : true
          $type      : int
          $minValue  : 0
          $maxValue  : 5000
        isDisabled:
          $desc      : 是否禁用
          $isRequired: false
          $type      : boolean
        note:
          $desc      : 备注
          $allowNull : true
          $type      : string

  deleteMany:
    showInDoc    : true
    name         : 批量删除批处理
    method       : get
    url          : /api/v1/batches/do/delete-many
    response     : json
    requireSignIn: $NOT_CONFIG._IS_STREAKING
    privilege    : general_w
    query:
      id:
        $desc      : 根据ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : bat.id
      funcId:
        $desc      : 根据函数ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : bat.funcId
      tags:
        $desc      : 根据批处理标签过滤
        $type      : commaArray
        $searchType: jsonArrayHasAll
        $searchKey : bat.tagsJSON
      origin:
        $desc      : 根据来源过滤
        $type      : commaArray
        $searchType: in
        $searchKey : bat.origin
        $commaArrayIn:
          - API
          - UI
      func_scriptSetId:
        $desc      : 根据脚本集ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.scriptSetId
      func_scriptId:
        $desc      : 根据脚本ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : func.scriptId
      func_tags:
        $desc      : 根据执行函数标签过滤
        $type      : commaArray
        $searchType: jsonArrayHasAll
        $searchKey : func.tagsJSON

# 任务信息
taskInfoAPI:
  list:
    showInDoc    : true
    name         : 列出任务信息
    method       : get
    url          : /api/v1/task-info/do/list
    response     : json
    requireSignIn: true
    privilege    : general_r
    paging       : true
    fieldPicking : true
    fieldKicking : true
    fuzzySearch:
      - task.id
      - task.originId
      - task.rootTaskId
      - task.funcId
      - task.logMessageTEXT
      - task.einfoTEXT
      - task.status
    query:
      id:
        $desc      : 按任务ID过滤
        $type      : string
        $searchType: eq
        $searchKey : task.id
      originId:
        $desc      : 按来源ID过滤
        $type      : string
        $searchType: eq
        $searchKey : task.originId
      rootTaskId:
        $desc      : 根据主任务ID过滤
        $type      : string
        $searchType: eq
        $searchKey : task.rootTaskId
      funcId:
        $desc      : 按函数ID过滤
        $type      : string
        $searchType: eq
        $searchKey : task.funcId
      status:
        $desc: 按状态过滤
        $type: enum
        $in:
          - success
          - failure
        $searchType: eq
        $searchKey : task.status

  clear:
    showInDoc    : true
    name         : 清空任务信息
    method       : get
    url          : /api/v1/task-info/:originId/do/clear
    response     : json
    requireSignIn: true
    privilege    : general_w
    params:
      originId:
        $desc: 来源ID
        $type: string

# 函数调用任务结果
datafluxFuncTaskResultAPI:
  list:
    name         : 列出函数调用任务结果
    method       : get
    url          : /api/v1/dataflux-func-task-results/do/list
    response     : json
    requireSignIn: true
    privilege    : general_r
    paging       : marker
    fieldPicking : true
    fieldKicking : true
    orderFields:
      seq: dftr.seq
    fuzzySearch:
      - dftr.id
      - dftr.origin
      - dftr.kwargsJSON->>$.funcId
    query:
      id:
        $desc      : 按任务ID过滤
        $type      : string
        $searchType: like
        $searchKey : dftr.id
      origin:
        $desc      : 按任务来源过滤
        $type      : string
        $searchType: like
        $searchKey : dftr.origin
      funcId:
        $desc      : 按函数过滤
        $type      : string
        $searchType: like
        $searchKey : dftr.kwargsJSON->>$.funcId
      execMode:
        $desc      : 按执行模式过滤
        $type      : enum
        $searchType: eq
        $searchKey : dftr.kwargsJSON->>$.execMode
        $in:
          - sync
          - async
          - crontab

  get:
    name         : 获取函数调用任务结果
    method       : get
    url          : /api/v1/dataflux-func-task-results/:id/do/get
    response     : json
    requireSignIn: true
    privilege    : general_r
    fieldPicking : true
    fieldKicking : true
    params:
      id:
        $desc: 任务ID
        $type: string

# 操作记录
operationRecordAPI:
  list:
    showInDoc    : true
    name         : 列出操作记录
    method       : get
    url          : /api/v1/operation-records/do/list
    response     : json
    requireSignIn: true
    privilege    : general_r
    export       : true
    paging       : true
    fieldPicking : true
    fieldKicking : true
    orderFields:
      seq: oprd.seq
    fuzzySearch:
      - oprd.userId
      - oprd.username
      - oprd.clientId
      - oprd.traceId
      - oprd.reqMethod
      - oprd.reqRoute
      - oprd.reqQueryJSON
      - oprd.reqParamsJSON
      - oprd.reqBodyJSON
      - oprd.respStatusCode
      - oprd.respBodyJSON
    query:
      id:
        $desc      : 根据ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : oprd.id
      userId:
        $desc      : 根据用户ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : oprd.userId
      username:
        $desc      : 根据用户ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : oprd.username
      clientId:
        $desc      : 根据客户端ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : oprd.clientId
      traceId:
        $desc      : 根据跟踪ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : oprd.traceId
      reqMethod:
        $desc      : 根据请求方法过滤
        $type      : commaArray
        $searchType: in
        $searchKey : oprd.reqMethod
      reqRoute:
        $desc      : 根据请求路由搜索
        $type      : string
        $searchType: like
        $searchKey : oprd.reqRoute
      reqQueryJSON:
        $desc      : 根据请求Query参数搜索
        $type      : string
        $searchType: like
        $searchKey : oprd.reqQueryJSON
      reqParamsJSON:
        $desc      : 根据请求Params参数搜索
        $type      : string
        $searchType: like
        $searchKey : oprd.reqParamsJSON
      reqBodyJSON:
        $desc      : 根据请求体参数搜索
        $type      : string
        $searchType: like
        $searchKey : oprd.reqBodyJSON
      respStatusCode:
        $desc      : 根据响应状态码过滤
        $type      : int
        $searchType: eq
        $searchKey : oprd.respStatusCode
      respBodyJSON:
        $desc      : 根据响应体搜索
        $type      : string
        $searchType: like
        $searchKey : oprd.respBodyJSON

# 文件服务
fileServiceAPI:
  list:
    showInDoc    : true
    name         : 列出文件服务
    method       : get
    url          : /api/v1/file-services/do/list
    response     : json
    requireSignIn: true
    privilege    : general_r
    export       : true
    paging       : false
    fieldPicking : true
    fieldKicking : true
    orderFields:
      seq       : fsvc.seq
      id        : fsvc.id
      root      : fsvc.root
      createTime: fsvc.createTime
      updateTime: fsvc.updateTime
    fuzzySearch:
      - fsvc.id
      - fsvc.root
    query:
      id:
        $desc      : 根据ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : fsvc.id
      root:
        $desc      : 根据根目录搜索
        $type      : string
        $searchType: like
        $searchKey : fsvc.root

  add:
    showInDoc    : true
    name         : 添加文件服务
    method       : post
    url          : /api/v1/file-services/do/add
    response     : json
    requireSignIn: true
    privilege    : general_w
    body:
      data:
        $isRequired: true
        id:
          $desc      : ID（不指定自动生成）
          $isRequired: false
          $allowNull : true
          $type      : string
        root:
          $desc      : 根目录
          $isRequired: true
          $type      : string
        isDisabled:
          $desc      : 是否禁用
          $isRequired: false
          $type      : boolean
        note:
          $desc      : 备注
          $allowNull : true
          $type      : string

  modify:
    showInDoc    : true
    name         : 修改文件服务
    method       : post
    url          : /api/v1/file-services/:id/do/modify
    response     : json
    requireSignIn: true
    privilege    : general_w
    params:
      id:
        $desc: 文件服务ID
        $type: string
    body:
      data:
        $isRequired: true
        root:
          $desc      : 根目录
          $isRequired: false
          $type      : string
        isDisabled:
          $desc      : 是否禁用
          $isRequired: false
          $type      : boolean
        note:
          $desc      : 备注
          $allowNull : true
          $type      : string

  delete:
    showInDoc    : true
    name         : 删除文件服务
    method       : get
    url          : /api/v1/file-services/:id/do/delete
    response     : json
    requireSignIn: true
    privilege    : general_w
    params:
      id:
        $desc: 文件服务ID
        $type: string

# DFF.CACHE缓存
funcCacheAPI:
  list:
    showInDoc    : true
    name         : 列出函数缓存（DFF.CACHE）
    method       : get
    url          : /api/v1/func-caches/do/list
    response     : json
    requireSignIn: true
    privilege    : general_r
    export       : true
    paging       : false
    fuzzySearch  : true
    query:
      scope:
        $desc: 根据Scope搜索
        $type: string
      key:
        $desc: 根据Key搜索
        $type: string

  get:
    showInDoc    : true
    name         : 获取函数缓存（DFF.CACHE）
    method       : get
    url          : /api/v1/func-caches/:scope/:key/do/get
    response     : json
    requireSignIn: true
    privilege    : general_r
    params:
      scope:
        $desc: 根据Scope过滤
        $type: string
      key:
        $desc: 根据Key过滤
        $type: string

  delete:
    showInDoc    : true
    name         : 删除函数缓存（DFF.CACHE）
    method       : get
    url          : /api/v1/func-caches/:scope/:key/do/delete
    response     : json
    requireSignIn: true
    privilege    : general_w
    params:
      scope:
        $desc: 根据Scope过滤
        $type: string
      key:
        $desc: 根据Key过滤
        $type: string

# DFF.STORE存储
funcStoreAPI:
  list:
    showInDoc    : true
    name         : 列出函数存储（DFF.STORE）
    method       : get
    url          : /api/v1/func-stores/do/list
    response     : json
    requireSignIn: true
    privilege    : general_r
    export       : true
    paging       : true
    orderFields:
      seq       : fnst.seq
      scope     : fnst.scope
      key       : fnst.key
      createTime: fnst.createTime
      updateTime: fnst.updateTime
    fuzzySearch:
      - fnst.scope
      - fnst.key
    query:
      id:
        $desc      : 根据ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : fnst.id
      scope:
        $desc      : 根据Scope搜索
        $type      : string
        $searchType: like
        $searchKey : fnst.scope
      key:
        $desc      : 根据Key搜索
        $type      : string
        $searchType: like
        $searchKey : fnst.key

  get:
    showInDoc    : true
    name         : 获取函数存储（DFF.STORE）
    method       : get
    url          : /api/v1/func-stores/:id/do/get
    response     : json
    requireSignIn: true
    privilege    : general_r
    params:
      id:
        $desc: 函数存储ID
        $type: string

  delete:
    showInDoc    : true
    name         : 删除函数存储（DFF.STORE）
    method       : get
    url          : /api/v1/func-stores/:id/do/delete
    response     : json
    requireSignIn: true
    privilege    : general_w
    params:
      id:
        $desc: 函数存储ID
        $type: string

# 蓝图
blueprintAPI:
  list:
    showInDoc    : true
    name         : 列出蓝图
    method       : get
    url          : /api/v1/blueprints/do/list
    response     : json
    requireSignIn: true
    privilege    : general_r
    export       : true
    paging       : true
    fieldPicking : true
    fieldKicking : true
    orderFields:
      id : blpt.id
      seq: blpt.seq
    fuzzySearch:
      - blpt.id
      - blpt.title
    query:
      id:
        $desc      : 根据ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : blpt.id
      title:
        $desc      : 根据标题搜索
        $type      : string
        $searchType: like
        $searchKey : blpt.title
      isDeployed:
        $desc      : 根据是否已部署过滤
        $type      : bool
        $searchType: boolean
        $searchKey : blpt.note

  add:
    showInDoc    : true
    name         : 添加蓝图
    method       : post
    url          : /api/v1/blueprints/do/add
    response     : json
    requireSignIn: true
    privilege    : general_w
    body:
      data:
        $isRequired: true
        id:
          $desc          : ID
          $isRequired    : true
          $type          : string
          $minLength     : 1
          $maxLength     : 128
          $matchRegExp   : ^[a-zA-Z_][a-zA-Z0-9_]*$
        title:
          $desc      : 标题
          $allowNull : true
          $type      : string
        canvasJSON:
          $desc      : 画布JSON
          $isRequired: false
          $type      : json
        isDeployed:
          $desc     : 是否已部署
          $allowNull: false
          $type     : boolean

  modify:
    showInDoc    : true
    name         : 修改蓝图
    method       : post
    url          : /api/v1/blueprints/:id/do/modify
    response     : json
    requireSignIn: true
    privilege    : general_w
    params:
      id:
        $desc: 蓝图ID
        $type: string
    body:
      data:
        $isRequired: true
        title:
          $desc      : 标题
          $allowNull : true
          $type      : string
        canvasJSON:
          $desc      : 画布JSON
          $isRequired: false
          $type      : json
        isDeployed:
          $desc     : 是否已部署
          $allowNull: true
          $type     : boolean

  delete:
    showInDoc    : true
    name         : 删除蓝图
    method       : get
    url          : /api/v1/blueprints/:id/do/delete
    response     : json
    requireSignIn: true
    privilege    : general_w
    params:
      id:
        $desc: 蓝图ID
        $type: string

# 脚本市场
scriptMarketAPI:
  list:
    showInDoc    : true
    name         : 列出脚本市场
    method       : get
    url          : /api/v1/script-markets/do/list
    response     : json
    requireSignIn: false
    privilege    : general_r
    paging       : false
    fieldPicking : true
    fieldKicking : true
    orderFields:
      name      : smkt.name
      createTime: smkt.createTime
      updateTime: smkt.updateTime
    fuzzySearch:
      - smkt.name
      - smkt.url
    query:
      id:
        $desc      : 根据ID过滤
        $type      : commaArray
        $searchType: in
        $searchKey : smkt.id
      name:
        $desc      : 根据名称搜索
        $type      : string
        $searchType: like
        $searchKey : smkt.name
      url:
        $desc      : 根据URL搜索
        $type      : string
        $searchType: like
        $searchKey : smkt.url

  add:
    showInDoc    : true
    name         : 添加脚本市场
    method       : post
    url          : /api/v1/script-markets/do/add
    response     : json
    requireSignIn: false
    privilege    : general_w
    body:
      data:
        $isRequired: true
        name:
          $desc      : 名称
          $allowNull : true
          $type      : string
        type:
          $desc      : 类型
          $isRequired: true
          $type      : enum
          $in:
            - git
            - aliyun_oss
        url:
          $desc      : URL地址
          $isRequired: true
          $type      : string
        gitBranch:
          $desc      : Git 库分支
          $allowNull : true
          $type      : string
        authJSON:
          $desc      : 认证信息
          $allowNull : true
          username:
            $desc      : 用户名
            $allowNull : true
            $type      : string
          password:
            $desc      : 密码
            $allowNull : true
            $type      : string
          accessKeyId:
            $desc      : Access Key ID
            $allowNull : true
            $type      : string
          accessKeySecret:
            $desc      : Access Key Secret
            $allowNull : true
            $type      : string

  delete:
    showInDoc    : true
    name         : 删除脚本市场
    method       : get
    url          : /api/v1/script-markets/:id/do/delete
    response     : json
    requireSignIn: false
    privilege    : general_w
    params:
      id:
        $desc: 脚本市场ID
        $type: string

  listScriptSets:
    showInDoc    : true
    name         : 列出脚本市场脚本集
    method       : get
    url          : /api/v1/script-markets/:id/script-sets/do/list
    response     : json
    requireSignIn: false
    privilege    : general_r
    paging       : false
    fieldPicking : true
    fieldKicking : true
    params:
      id:
        $desc: 脚本市场ID
        $type: string

  setOwner:
    showInDoc    : true
    name         : 获取脚本市场拥有权
    method       : post
    url          : /api/v1/script-markets/:id/owner/do/set
    response     : json
    requireSignIn: false
    privilege    : general_w
    params:
      id:
        $desc: 脚本市场ID
        $type: string

  unsetOwner:
    showInDoc    : true
    name         : 放弃脚本市场拥有权
    method       : post
    url          : /api/v1/script-markets/:id/owner/do/unset
    response     : json
    requireSignIn: false
    privilege    : general_w
    params:
      id:
        $desc: 脚本市场ID
        $type: string

  publish:
    showInDoc    : true
    name         : 发布脚本至脚本市场
    method       : post
    url          : /api/v1/script-markets/:id/do/publish
    response     : json
    requireSignIn: false
    privilege    : general_w
    params:
      id:
        $desc: 脚本市场ID
        $type: string
    body:
      scriptSetIds:
        $desc      : 发布的脚本集ID列表
        $isRequired: true
        $minLength : 1
        $:
          $desc      : 脚本集ID
          $isRequired: true
          $type      : string
      message:
        $desc      : 发布信息
        $isRequired: true
        $type      : string
