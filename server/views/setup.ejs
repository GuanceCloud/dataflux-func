<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta http-equiv="Pragma" content="no-cache,no-store,must-revalidate" />
    <meta http-equiv="Cache-Control" content="no-cache,no-store,must-revalidate" />
    <meta http-equiv="Expires" content="0" />
    <meta name="renderer" content="webkit" />
    <meta name="robots" content="none" />
    <meta name="apple-mobile-web-app-title" content="DataFlux Func 初始安装" />

    <!-- <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no" /> -->
    <!-- <meta name="viewport" content="width=980" /> -->
    <meta name="viewport" content="width=1440" />

    <link rel="stylesheet" href="/statics/libs/font-awesome/css/font-awesome.min.css">
    <link rel="stylesheet" href="/statics/libs/element-ui/css/element-ui.min.css">
    <script src="/statics/libs/vue/vue.min.js"></script>
    <script src="/statics/libs/vue-i18n/vue-i18n.min.js"></script>
    <script src="/statics/libs/element-ui/js/element-ui.min.js"></script>
    <script src="/statics/libs/axios/axios.min.js"></script>
    <title>DataFlux Func</title>
  </head>
  <style>
    @font-face {
      font-family: Iosevka;
      src: url(./statics/font/iosevka-fixed-regular.woff2);
    }
    * {
      font-family: "Iosevka","PingFang SC","Microsoft YaHei","微软雅黑","Arial","sans-serif";
      font-size: 14px;
      outline: none !important;
    }
    html {
      /* scroll-behavior: smooth; */
    }
    body {
      padding-top: 30px;
      padding-bottom: 100px;
    }
    hr {
      border: 0;
      border-top: 1px solid #eee;
      margin: 20px 0;
    }
    a,
    a:active,
    a:hover,
    a:focus,
    a:visited {
      color          : #ff6600;
      cursor         : pointer;
      text-decoration: none !important;
    }
    strong {
      color: red;
    }
    code {
      padding: 0 3px;
      margin: 0 3px;
      border: 1px solid #ccc;
      border-radius: 3px;
      background: #eee;
    }
    #setupPanel {
      width: 600px;
      margin: auto;
      border: 1px solid #ddd;
      border-radius: 3px;
      padding: 15px;
      box-shadow: 1px 1px 3px #ccc;
    }
    #setupPanelHeader {
      width: 300px;
      display: block;
      margin: auto;
      text-align: right;
    }
    #setupPanelHeader img {
      width: 100%;
    }
    #setupPanelHeader span {
      font-weight: bold;
      font-style: italic;
      font-size: 16px;
    }
    #setupPanelFooter {
      text-align: right;
    }
    #language {
      text-align: right;
    }
    #setupConfigArea .el-select {
      display: block;
    }
    #setupProcess {
      text-align: center;
    }
    #setupProcessIcon {
      font-size: 60px;
      color: darkgray
    }
    #setupProcessIconCog {
      top: 40px;
      left: 40px;
      color: #FF6600;
      font-size: 80px;
    }
    .setup-process-tip {
      padding-top: 20px;
      font-weight: bold;
      font-size: 16px;
      color: #ff6600;
    }
    .custom-config-tip {
      text-align: center;
    }
    .config-info {
      display: flex;
      justify-content: space-between;
      margin-top: 20px;
      margin-bottom: 5px;
    }
    .config-info * {
    }
    .popover-tips {
      background: #f5f5f5;
      border-color: #ccc;
      width: 320px;
      word-break: keep-all;
      text-align: left;
    }
    .bad-config input {
      color: red;
      border-color: red;
      border-left-width: 5px;
    }
    .el-message-box {
      width: 600px;
    }
  </style>
  <body>
    <div id="app">
      <el-container>
        <div id="setupPanel">
          <!-- 头部 -->
          <div id="setupPanelHeader">
            <img src="/statics/img/logo-dataflux-func.png">
            <br><span>{{ $t('Version:') }} <%= IMAGE_INFO.CI_COMMIT_REF_NAME %></span>
          </div>

          <!-- 语言选择 -->
          <hr>
          <div id="language">
            <span>Language:</span>
            <el-select v-model="locale" size="mini">
              <el-option label="简体中文" value="zh-CN"></el-option>
              <el-option label="English" value="en"></el-option>
            </el-select>
          </div>

          <!-- 提示语 -->
          <p>
            {{ $t('Some basic setup should be done before DataFlux Func starts up.') }}
            <br>
            <br>
            <strong>{{ $t('If you are deploying manually, please ensure that the following conditions are met:') }}</strong>
            <ul>
              <li>{{ $t('MySQL 5.7 or above') }}</li>
              <li v-html="$t('Empty database exists in MySQL and the database encoding is <code>utf8mb4</code>')"></li>
              <li>{{ $t('There is a user in MySQL who can log in remotely and has permission to the empty database (including CREATE permission)') }}</li>
              <li>
                <span v-html="$t('Keep the option <code>innodb_large_prefix</code> <strong>ON</strong> in MySQL 5.7')"></span>
                <br>
                <a target="_blank" href="https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_large_prefix">{{ $t('(Official MySQL 5.7 doc)') }}</a>
              </li>
              <li v-html="$t('Redis 4.0 or above, and <strong>NOT</strong> running in Cluster Mode')"></li>
            </ul>
          </p>

          <hr>
          <!-- 管理员用户 -->
          <el-popover
            :visible-arrow="false"
            placement="right"
            popper-class="popover-tips"
            trigger="hover">
            <div slot="reference">
              <div class="config-info">
                <span>{{ $t('Administrator username') }}</span>
                <code>ADMIN_USERNAME</code>
              </div>
              <el-input
                ref="ADMIN_USERNAME"
                v-model="userConfigs.ADMIN_USERNAME"></el-input>
            </div>
            <p>
              {{ $t('Create an initial administrator user for the system') }}
            </p>
          </el-popover>

          <!-- 管理员密码（默认为 admin) -->
          <el-popover
            :visible-arrow="false"
            placement="right"
            popper-class="popover-tips"
            trigger="hover">
            <div slot="reference">
              <div class="config-info">
                <span>{{ $t('Administrator password (default is admin)') }}</span>
                <code>ADMIN_PASSWORD</code>
              </div>
              <el-input
                ref="ADMIN_PASSWORD"
                v-model="userConfigs.ADMIN_PASSWORD" show-password></el-input>
            </div>
            <p>
              {{ $t('A strong password can protect your data security') }}
            </p>
          </el-popover>

          <!-- 重复管理员密码 -->
          <el-popover
            :visible-arrow="false"
            placement="right"
            popper-class="popover-tips"
            trigger="hover">
            <div slot="reference">
              <div class="config-info">
                <span>{{ $t('Repeat administrator password') }}</span>
                <code>ADMIN_PASSWORD_REPEAT</code>
              </div>
              <el-input
                ref="ADMIN_PASSWORD_REPEAT"
                v-model="userConfigs.ADMIN_PASSWORD_REPEAT" show-password></el-input>
            </div>
            <p>
              {{ $t('Enter the administrator password again') }}
            </p>
          </el-popover>

          <!-- 自定义选项 -->
          <div id="setupConfigArea">
            <div class="config-info">
              <el-checkbox v-model="showMoreConfigs">{{ $t('Show more configs') }}</el-checkbox>
            </div>
            <template v-if="showMoreConfigs">
              <p class="custom-config-tip"><strong>{{ $t('Unless necessary, just use the default configuration') }}</strong></p>

              <!-- 加密密钥 -->
              <el-popover
                :visible-arrow="false"
                placement="right"
                popper-class="popover-tips"
                trigger="hover">
                <div slot="reference">
                  <div class="config-info">
                    <span>{{ $t('Secret') }}</span>
                    <code>SECRET</code>
                  </div>
                  <el-input v-model="userConfigs.SECRET" show-password :minlength="8" :maxlength="20"></el-input>
                </div>
                <p>
                  <span v-html="$t('A random string of <code>8</code> to <code>20</code> digits is recommended, do not modify once installed')"></span>
                  <br><strong>{{ $t('Make sure to use the same Secret in multiple deployments') }}</strong>
                </p>
              </el-popover>

              <!-- 日志等级 -->
              <el-popover
                :visible-arrow="false"
                placement="right"
                popper-class="popover-tips"
                trigger="hover">
                <div slot="reference">
                  <div class="config-info">
                    <span>{{ $t('Log level') }}</span>
                    <code>LOG_LEVEL</code>
                  </div>
                  <el-select v-model="userConfigs.LOG_LEVEL">
                    <el-option :label="$t('NONE (no log)')" value="NONE"></el-option>
                    <el-option label="ERROR" value="ERROR"></el-option>
                    <el-option label="WARNING" value="WARNING"></el-option>
                    <el-option label="INFO" value="INFO"></el-option>
                    <el-option label="DEBUG" value="DEBUG"></el-option>
                    <el-option :label="$t('ALL (all logs)')" value="ALL"></el-option>
                  </el-select>
                </div>
                <p>
                  <span v-html="$t('<code>WARNING</code> level is recommended')"></span>
                </p>
              </el-popover>

              <!-- 日志文件格式 -->
              <el-popover
                :visible-arrow="false"
                placement="right"
                popper-class="popover-tips"
                trigger="hover">
                <div slot="reference">
                  <div class="config-info">
                    <span>{{ $t('Log file format') }}</span>
                    <code>LOG_FILE_FORMAT</code>
                  </div>
                  <el-select v-model="userConfigs.LOG_FILE_FORMAT">
                    <el-option label="TEXT" value="text"></el-option>
                    <el-option label="JSON" value="json"></el-option>
                  </el-select>
                </div>
                <p>
                  <span v-html="$t('If you are using a log analysis system, choose <code>JSON</code> for convenience')"></span>
                  <br><span v-html="$t('Otherwise, just choose <code>TEXT</code>')"></span>
                </p>
              </el-popover>

              <!-- WEB访问URL -->
              <el-popover
                :visible-arrow="false"
                placement="right"
                popper-class="popover-tips"
                trigger="hover">
                <div slot="reference">
                  <div class="config-info">
                    <span>{{ $t('Website URL') }}</span>
                    <code>WEB_BASE_URL</code>
                  </div>
                  <el-input v-model="userConfigs.WEB_BASE_URL"></el-input>
                </div>
                <p>
                  {{ $t('Full address to access DataFlux Func, e.g.') }}
                  <br><code>http://my-dataflux-func.com:1234</code>
                  <br>{{ $t('Leave blank to follow the browser address') }}
                </p>
              </el-popover>

              <!-- MySQL主机 -->
              <el-popover
                :visible-arrow="false"
                placement="right"
                popper-class="popover-tips"
                trigger="hover">
                <div slot="reference">
                  <div class="config-info">
                    <span>{{ $t('MySQL host') }}</span>
                    <code>MYSQL_HOST</code>
                  </div>
                  <el-input
                    ref="MYSQL_HOST"
                    :class="{ 'bad-config': setupErrorKeyStatus.mysql }"
                    v-model="userConfigs.MYSQL_HOST"></el-input>
                </div>
                <p>
                  {{ $t('MySQL host to connect. Can be a domain name or IP address, no port included') }}
                  <br><strong>{{ $t('Do not modify if you are using automatic deploying script') }}</strong>
                </p>
              </el-popover>

              <!-- MySQL端口 -->
              <el-popover
                :visible-arrow="false"
                placement="right"
                popper-class="popover-tips"
                trigger="hover">
                <div slot="reference">
                  <div class="config-info">
                    <span>{{ $t('MySQL port') }}</span>
                    <code>MYSQL_PORT</code>
                  </div>
                  <el-input
                    ref="MYSQL_PORT"
                    :class="{ 'bad-config': setupErrorKeyStatus.mysql }"
                    v-model.number="userConfigs.MYSQL_PORT" type="number" min="1" max="65535" step="1"></el-input>
                </div>
                <p>
                  <span v-html="$t('Typically <code>{port}</code>', { port: 6379 })"></span>
                  <br><strong>{{ $t('Do not modify if you are using automatic deploying script') }}</strong>
                </p>
              </el-popover>

              <!-- MySQL用户 -->
              <el-popover
                :visible-arrow="false"
                placement="right"
                popper-class="popover-tips"
                trigger="hover">
                <div slot="reference">
                  <div class="config-info">
                    <span>{{ $t('MySQL user') }}</span>
                    <code>MYSQL_USER</code>
                  </div>
                  <el-input
                    ref="MYSQL_USER"
                    :class="{ 'bad-config': setupErrorKeyStatus.mysql }"
                    v-model="userConfigs.MYSQL_USER"></el-input>
                </div>
                <p>
                  {{ $t('Since database must be initialized, ensure that the user has full privileges to operate the database') }}
                  <br><strong>{{ $t('Do not modify if you are using automatic deploying script') }}</strong>
                </p>
              </el-popover>

              <!-- MySQL密码 -->
              <el-popover
                :visible-arrow="false"
                placement="right"
                popper-class="popover-tips"
                trigger="hover">
                <div slot="reference">
                  <div class="config-info">
                    <span>{{ $t('MySQL password') }}</span>
                    <code>MYSQL_PASSWORD</code>
                  </div>
                  <el-input
                    ref="MYSQL_PASSWORD"
                    :class="{ 'bad-config': setupErrorKeyStatus.mysql }"
                    v-model="userConfigs.MYSQL_PASSWORD" show-password></el-input>
                </div>
                <p>
                  {{ $t('Password for the MySQL user') }}
                  <br><strong>{{ $t('Do not modify if you are using automatic deploying script') }}</strong>
                </p>
              </el-popover>

              <!-- MySQL数据库 -->
              <el-popover
                :visible-arrow="false"
                placement="right"
                popper-class="popover-tips"
                trigger="hover">
                <div slot="reference">
                  <div class="config-info">
                    <span>{{ $t('MySQL database') }}</span>
                    <code>MYSQL_DATABASE</code>
                  </div>
                  <el-input
                    ref="MYSQL_DATABASE"
                    :class="{ 'bad-config': setupErrorKeyStatus.mysql }"
                    v-model="userConfigs.MYSQL_DATABASE"></el-input>
                </div>
                <p>
                  <span v-html="$t('Do not mix the database with other systems, and the default encoding should be <code>utf8mb4</code>')"></span>
                  <br><strong>{{ $t('Do not modify if you are using automatic deploying script') }}</strong>
                </p>
              </el-popover>

              <!-- Redis主机 -->
              <el-popover
                :visible-arrow="false"
                placement="right"
                popper-class="popover-tips"
                trigger="hover">
                <div slot="reference">
                  <div class="config-info">
                    <span>{{ $t('Redis host') }}</span>
                    <code>REDIS_HOST</code>
                  </div>
                  <el-input
                    ref="REDIS_HOST"
                    :class="{ 'bad-config': setupErrorKeyStatus.redis }"
                    v-model="userConfigs.REDIS_HOST"></el-input>
                </div>
                <p>
                  {{ $t('Redis host to connect. Can be a domain name or IP address, no port included') }}
                  <br><strong>{{ $t('Do not modify if you are using automatic deploying script') }}</strong>
                </p>
              </el-popover>

              <!-- Redis端口 -->
              <el-popover
                :visible-arrow="false"
                placement="right"
                popper-class="popover-tips"
                trigger="hover">
                <div slot="reference">
                  <div class="config-info">
                    <span>{{ $t('Redis port') }}</span>
                    <code>REDIS_PORT</code>
                  </div>
                  <el-input
                    ref="REDIS_PORT"
                    :class="{ 'bad-config': setupErrorKeyStatus.redis }"
                    v-model.number="userConfigs.REDIS_PORT" type="number" min="1" max="65535" step="1"></el-input>
                </div>
                <p>
                  <span v-html="$t('Typically <code>{port}</code>', { port: 6379 })"></span>
                  <br><strong>{{ $t('Do not modify if you are using automatic deploying script') }}</strong>
                </p>
              </el-popover>

              <!-- Redis密码 -->
              <el-popover
                :visible-arrow="false"
                placement="right"
                popper-class="popover-tips"
                trigger="hover">
                <div slot="reference">
                  <div class="config-info">
                    <span>{{ $t('Redis password') }}</span>
                    <code>REDIS_PASSWORD</code>
                  </div>
                  <el-input
                    ref="REDIS_PASSWORD"
                    :class="{ 'bad-config': setupErrorKeyStatus.redis }"
                    v-model="userConfigs.REDIS_PASSWORD" show-password></el-input>
                </div>
                <p>
                  {{ $t('Password for the Redis, leave blank when no password') }}
                  <br><strong>{{ $t('Do not modify if you are using automatic deploying script') }}</strong>
                </p>
              </el-popover>

              <!-- Redis数据库 -->
              <el-popover
                :visible-arrow="false"
                placement="right"
                popper-class="popover-tips"
                trigger="hover">
                <div slot="reference">
                  <div class="config-info">
                    <span>{{ $t('Redis database') }}</span>
                    <code>REDIS_DATABASE</code>
                  </div>
                  <el-input
                    ref="REDIS_DATABASE"
                    :class="{ 'bad-config': setupErrorKeyStatus.redis }"
                    v-model.number="userConfigs.REDIS_DATABASE" type="number" min="0" step="1"></el-input>
                </div>
                <p>
                  {{ $t('Do not mix the database with other systems') }}
                  <br><strong>{{ $t('Do not modify if you are using automatic deploying script') }}</strong>
                </p>
              </el-popover>

              <!-- Redis TLS -->
              <el-popover
                :visible-arrow="false"
                placement="right"
                popper-class="popover-tips"
                trigger="hover">
                <div slot="reference">
                  <div class="config-info">
                    <span>{{ $t('Redis TLS') }}</span>
                    <code>REDIS_USE_TLS</code>
                  </div>
                  <el-select v-model="userConfigs.REDIS_USE_TLS">
                    <el-option :label="$t('Disable TLS (default)')" value="false"></el-option>
                    <el-option :label="$t('Enable TLS')" value="true"></el-option>
                  </el-select>
                </div>
                <p>
                  {{ $t('When connecting to AWS ElastiCache with password, TLS maybe required.') }}
                  <br><strong>{{ $t('Or just leave default (Disable TLS)') }}</strong>
                </p>
              </el-popover>
            </template>
          </div>

          <!-- 底部 -->
          <hr>
          <div id="setupPanelFooter">
            <el-button type="primary" @click="setup">{{ $t('Save and init DB') }}</el-button>
          </div>
        </div>
        <el-dialog
          :title="$t('Setup DataFlux Func')"
          :visible.sync="showSetupProcess"
          :close-on-click-modal="false"
          :close-on-press-escape="false"
          :show-close="false"
          width="30%">
          <div id="setupProcess">
            <!-- <i class="fa fa-cog fa-spin fa-4x fa-fw text-muted"></i> -->
            <span id="setupProcessIcon" class="fa-stack">
              <i class="fa fa-fw fa-database fa-stack-2x"></i>
              <i id="setupProcessIconCog" class="fa fa-fw fa-cog fa-spin fa-stack-1x"></i>
            </span>

            <template v-if="showLongTimeWaitTip">
              <p class="setup-process-tip">{{ $t('Finishing soon...') }}</p>
              <p>
                {{ $t('If there is no response for a long time, you can try to click the link') }}
                <br><a :href="redirectURL">{{ redirectURL }}</a>
              </p>
            </template>
            <template v-else>
              <p class="setup-process-tip">{{ $t('Processing, please wait...') }}</p>
            </template>
          </div>
        </el-dialog>
      </el-container>
    </div>
  </body>
  <script>
    // 多语言
    const messages = {
      'zh-CN': {
        'OK': '好',

        'Setup DataFlux Func'                                                   : '安装 DataFlux Func',
        'Processing, please wait...'                                            : '正在处理，请稍后...',
        'Finishing soon...'                                                     : '即将完成...',
        'If there is no response for a long time, you can try to click the link': '如长时间无响应，可尝试点击链接',
        'Error occured during initializing DB'                                  : '初始化数据库时发生错误',

        'Connecting to MySQL failed'                              : '连接 MySQL 失败',
        'Unexpected error with MySQL'                             : 'MySQL 抛出未预期的错误',
        'MySQL 5.7 or above is required'                          : 'MySQL 版本必须为 5.7 及以上',
        'MySQL system variable `innodb_large_prefix` should be ON': 'MySQL 系统参数`innodb_large_prefix`必须设置为 ON',
        'Connecting to Redis failed'                              : '连接 Redis 失败',
        'Access Redis failed'                                     : '访问 Redis 失败',
        'Redis 4.0 or above is required'                          : 'Redis 版本必须为 4.0 及以上',
        'Unexpected error with Redis'                             : 'Redis 抛出未预期的错误',
        'Initializing MySQL database failed'                      : '初始化 MySQL 数据库失败',
        'Initializing system configs failed'                      : '初始化系统配置失败',
        'Administrator username or password is not inputed'       : '管理员用户名或密码未填写',
        'Repeated administrator password not match'               : '两次输入的管理员密码不匹配',
        'Setup administrator password failed'                     : '设置管理员密码失败',

        'Version:': '版本：',

        'Some basic setup should be done before DataFlux Func starts up.'                                                        : 'DataFlux Func 在运行之前需要一些基本的配置。',
        'If you are deploying manually, please ensure that the following conditions are met:'                                    : '如果您通过手工方式部署，请确保满足如下条件：',
        'MySQL 5.7 or above'                                                                                                     : 'MySQL 5.7 或以上版本',
        'Empty database exists in MySQL and the database encoding is <code>utf8mb4</code>'                                       : 'MySQL 中存在空数据库，且编码格式为<code>utf8mb4</code>',
        'There is a user in MySQL who can log in remotely and has permission to the empty database (including CREATE permission)': 'MySQL 中存在可远程登录的用户，且有权限操作上述空数据库（包含 CREATE 权限）',
        'Keep the option <code>innodb_large_prefix</code> <strong>ON</strong> in MySQL 5.7'                                      : 'MySQL 5.7 <code>innodb_large_prefix</code>选项保持<strong>打开（ON）</strong>',
        '(Official MySQL 5.7 doc)'                                                                                               : '（MySQL 5.7 官方文档）',
        'Redis 4.0 or above, and <strong>NOT</strong> running in Cluster Mode'                                                   : 'Redis 4.0 或以上版本，且<strong>不是</strong> Redis 集群',

        'Show more configs': '显示更多配置',
        'The default administrator username and password are <code>admin</code>, which can be changed after installation.': '系统管理员用户名和密码默认都是<code>admin</code>，安装完成后也可以修改',
        'Unless necessary, just use the default configuration'                                                            : '除非必要，使用默认配置即可',

        'Do not modify if you are using automatic deploying script': '全自动部署时请勿修改',
        'Typically <code>{port}</code>'                            : '一般为<code>{port}</code>',

        'Secret': '加密密钥',
        'A random string of <code>8</code> to <code>20</code> digits is recommended, do not modify once installed': '建议输入<code>8</code>～<code>20</code>位随机字符串，一旦安装后请勿修改',
        'Make sure to use the same Secret in multiple deployments'                                                : '多份部署时必须使用相同的值',

        'Log level'     : '日志等级',
        'NONE (no log)' : 'NONE（不输出）',
        'ALL (all logs)': 'ALL（全部输出）',
        '<code>WARNING</code> level is recommended': '建议设置为<code>WARNING</code>级别',

        'Log file format': '日志文件格式',
        'If you are using a log analysis system, choose <code>JSON</code> for convenience': '如有日志相关分析系统，可选择<code>JSON</code>方便处理',
        'Otherwise, just choose <code>TEXT</code>'                                        : '否则指定为<code>TEXT</code>即可',

        'Website URL': '网站访问URL',
        'Full address to access DataFlux Func, e.g.': '访问 DataFlux Func 的访问完整地址，如：',
        'Leave blank to follow the browser address' : '留空表示跟随浏览器访问地址',

        'MySQL host': 'MySQL 主机',
        'MySQL host to connect. Can be a domain name or IP address, no port included': 'DataFlux Func 所连接的 MySQL 数据库，可以为域名或 IP 地址，不含端口',

        'MySQL port': 'MySQL 端口',

        'MySQL user': 'MySQL 用户',
        'Since database must be initialized, ensure that the user has full privileges to operate the database': '由于需要进行数据库初始化操作，请确保此用户具有操作对应库的完整权限',

        'MySQL password': 'MySQL 密码',
        'Password for the MySQL user': 'MySQL 用户密码',

        'MySQL database': 'MySQL 数据库',
        'Do not mix the database with other systems, and the default encoding should be <code>utf8mb4</code>': '请勿和其他系统混用数据库，且默认编码应设置为<code>utf8mb4</code>',

        'Redis host': 'Redis 主机',
        'Redis host to connect. Can be a domain name or IP address, no port included': 'DataFlux Func 所连接的 Redis 数据库，可以为域名或 IP 地址，不含端口',

        'Redis port': 'Redis 端口',

        'Redis password': 'Redis 密码',
        'Password for the Redis, leave blank when no password': 'Redis 访问密码，没有密码请留空',

        'Redis database': 'Redis 数据库',
        'Do not mix the database with other systems': '请勿和其他系统混用数据库',

        'Redis TLS': 'Redis TLS',
        'When connecting to AWS ElastiCache with password, TLS maybe required.': '当连接至开启密码的 AWS ElastiCache 时，可能需要使用 TLS 连接。',
        'Or just leave default (Disable TLS)'                                  : '否则，保持默认（禁用 TLS）即可',
        'Disable TLS (default)'                                                : '禁用 TLS（默认）',
        'Enable TLS'                                                           : '启用 TLS',

        'Administrator username': '管理员用户名',
        'Create an initial administrator user for the system': '为系统配置一个初始管理员用户',

        'Administrator password (default is admin)': '管理员密码（默认为 admin)',
        'A strong password can protect your data security': '复杂的密码可以保护您的数据安全',

        'Repeat administrator password': '重复管理员密码',
        'Enter the administrator password again': '请再输入一遍管理员密码',

        'Save and init DB': '保存并初始化数据库',
      }
    };
    const i18n = new VueI18n({
      locale                : 'zh-CN',
      fallbackLocale        : 'en',
      formatFallbackMessages: true,
      silentFallbackWarn    : true,
      silentTranslationWarn : true,
      messages,
    });

    // Vue应用
    const app = new Vue({
      i18n,
      watch: {
        locale(val) {
          this.$i18n.locale = val;
        },
      },
      methods: {
        async setup() {
          this.showSetupProcess = true;

          // 清空错误
          for (var k in this.setupErrorKeyStatus) {
            this.setupErrorKeyStatus[k] = false;
          }

          // 准备配置
          let userConfigs = JSON.parse(JSON.stringify(this.userConfigs))

          // 【配置特殊处理】
          if ('string' === typeof userConfigs.REDIS_USE_TLS) {
            userConfigs.REDIS_USE_TLS = JSON.parse(userConfigs.REDIS_USE_TLS);
          }

          try {
            // 发送安装请求
            let axiosRes = await axios.post('/setup', { config: userConfigs });
            this.setupRedirectURL = axiosRes.data.redirectURL;

          } catch(err) {
            // 错误提示
            let setupErrors = err.response.data.setupErrors;
            let setupErrorMessages = Object.values(setupErrors).map(setupError => {
              let _title = this.$t(setupError.title) || '';
              let _error = setupError.error || '';

              var parts = [];
              if (_title) parts.push(_title);
              if (_error) parts.push(_error);

              return parts.join(': ');
            });
            let setupErrorMessageHTML = `<ul>${setupErrorMessages.map(m => `<li><strong>${m}</strong></li>`).join('')}</ul>`;

            await this.$alert(setupErrorMessageHTML, this.$t('Error occured during initializing DB'), {
              dangerouslyUseHTMLString: true,
              confirmButtonText: this.$t('OK'),
            });

            // 滚动到第一个错误项目
            this.showSetupProcess = false;

            let minOffsetTop = null;
            for (let ref in this.inputRefKeyMap) {
              let setupErrorKey = this.inputRefKeyMap[ref];

              if (setupErrorKey in setupErrors) {
                this.setupErrorKeyStatus[setupErrorKey] = true;

                let elOffsetTop = app.$refs[ref].$el.offsetTop;
                if (minOffsetTop === null || elOffsetTop < minOffsetTop) {
                  minOffsetTop = elOffsetTop;
                }
              }
            }

            window.scrollTo(0, minOffsetTop - 100);
            return;
          }

          // 轮询ping接口，直至完成
          let pingT = setInterval(async () => {
            this.showLongTimeWaitTip = true;

            let axiosRes = null;
            try {
              axiosRes = await axios.get('/api/v1/do/ping', {
                timeout: 1000,
              });
            } catch(err) {
              return;
            }

            if (!axiosRes.status || axiosRes.status !== 200) return;

            // 成功，立即跳转
            clearInterval(pingT);
            setTimeout(() => {
              location.href = this.redirectURL;
            }, 3 * 1000);
          }, 1 * 1000);
        },
        genRandomSecret() {
          var len     = 16;
          var samples = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';

          var randString = '';
          for (var i = 0; i < len; i++) {
            var randIndex = Math.floor(Math.random() * samples.length);
            randString += samples[randIndex];
          }

          return randString;
        },
      },
      computed: {
        redirectURL() {
          return this.setupRedirectURL || this.userConfigs.WEB_BASE_URL || location.origin;
        },
        inputRefKeyMap() {
          return {
            MYSQL_HOST           : 'mysql',
            MYSQL_PORT           : 'mysql',
            MYSQL_USER           : 'mysql',
            MYSQL_PASSWORD       : 'mysql',
            MYSQL_DATABASE       : 'mysql',
            REDIS_HOST           : 'redis',
            REDIS_PORT           : 'redis',
            REDIS_DATABASE       : 'redis',
            REDIS_PASSWORD       : 'redis',
            REDIS_USE_TLS        : 'redis',
            ADMIN_USERNAME       : 'adminUser',
            ADMIN_PASSWORD       : 'adminUser',
            ADMIN_PASSWORD_REPEAT: 'adminUser',
          }
        },
      },
      data() {
        let currentConfig = <%- JSON.stringify(CONFIG) %>;

        return {
          locale             : 'zh-CN',
          showMoreConfigs    : false,
          showSetupProcess   : false,
          showLongTimeWaitTip: false,

          setupRedirectURL: null,

          setupErrorKeyStatus: {
            mysql    : false,
            redis    : false,
            adminUser: false,
          },

          userConfigs: {
            SECRET               : this.genRandomSecret(),
            LOG_LEVEL            : currentConfig.LOG_LEVEL,
            LOG_FILE_FORMAT      : currentConfig.LOG_FILE_FORMAT,
            WEB_BASE_URL         : currentConfig.WEB_BASE_URL,
            MYSQL_HOST           : currentConfig.MYSQL_HOST,
            MYSQL_PORT           : currentConfig.MYSQL_PORT,
            MYSQL_USER           : currentConfig.MYSQL_USER,
            MYSQL_PASSWORD       : currentConfig.MYSQL_PASSWORD,
            MYSQL_DATABASE       : currentConfig.MYSQL_DATABASE,
            REDIS_HOST           : currentConfig.REDIS_HOST,
            REDIS_PORT           : currentConfig.REDIS_PORT,
            REDIS_DATABASE       : currentConfig.REDIS_DATABASE,
            REDIS_PASSWORD       : currentConfig.REDIS_PASSWORD,
            REDIS_USE_TLS        : `${currentConfig.REDIS_USE_TLS}`,
            ADMIN_USERNAME       : currentConfig.ADMIN_USERNAME,
            ADMIN_PASSWORD       : currentConfig.ADMIN_PASSWORD,
            ADMIN_PASSWORD_REPEAT: currentConfig.ADMIN_PASSWORD_REPEAT,
          }
        }
      },
    }).$mount('#app');
    window.app = app;
  </script>
</html>
